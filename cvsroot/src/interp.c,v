head	1.198;
access;
symbols;
locks; strict;
comment	@ * @;


1.198
date	2004.04.25.00.32.05;	author boogums;	state Exp;
branches;
next	1.197;

1.197
date	2004.02.04.02.53.01;	author boogums;	state Exp;
branches;
next	1.196;

1.196
date	2004.01.11.22.07.30;	author boogums;	state Exp;
branches;
next	1.195;

1.195
date	2004.01.09.22.04.15;	author ndagger;	state Exp;
branches;
next	1.194;

1.194
date	2004.01.08.21.59.18;	author ndagger;	state Exp;
branches;
next	1.193;

1.193
date	2003.11.29.23.15.37;	author boogums;	state Exp;
branches;
next	1.192;

1.192
date	2003.11.28.00.13.53;	author boogums;	state Exp;
branches;
next	1.191;

1.191
date	2003.10.13.22.07.12;	author ndagger;	state Exp;
branches;
next	1.190;

1.190
date	2003.10.08.00.49.27;	author ndagger;	state Exp;
branches;
next	1.189;

1.189
date	2003.08.17.18.12.02;	author boogums;	state Exp;
branches;
next	1.188;

1.188
date	2003.04.25.06.41.47;	author ndagger;	state Exp;
branches;
next	1.187;

1.187
date	2003.04.25.05.15.38;	author ndagger;	state Exp;
branches;
next	1.186;

1.186
date	2003.04.14.05.54.08;	author ndagger;	state Exp;
branches;
next	1.185;

1.185
date	2003.03.23.00.06.55;	author boogums;	state Exp;
branches;
next	1.184;

1.184
date	2003.02.20.00.33.02;	author ndagger;	state Exp;
branches;
next	1.183;

1.183
date	2003.01.18.19.19.04;	author ndagger;	state Exp;
branches;
next	1.182;

1.182
date	2002.12.12.00.11.38;	author ndagger;	state Exp;
branches;
next	1.181;

1.181
date	2002.12.05.05.35.27;	author boogums;	state Exp;
branches;
next	1.180;

1.180
date	2002.11.04.15.57.34;	author rusty;	state Exp;
branches;
next	1.179;

1.179
date	2002.11.02.10.36.48;	author ndagger;	state Exp;
branches;
next	1.178;

1.178
date	2002.10.26.02.43.19;	author boogums;	state Exp;
branches;
next	1.177;

1.177
date	2002.10.21.01.38.47;	author boogums;	state Exp;
branches;
next	1.176;

1.176
date	2002.10.21.01.08.38;	author boogums;	state Exp;
branches;
next	1.175;

1.175
date	2002.10.20.23.43.30;	author boogums;	state Exp;
branches;
next	1.174;

1.174
date	2002.10.15.21.28.49;	author boogums;	state Exp;
branches;
next	1.173;

1.173
date	2002.10.13.21.49.02;	author ndagger;	state Exp;
branches;
next	1.172;

1.172
date	2002.10.13.03.28.50;	author boogums;	state Exp;
branches;
next	1.171;

1.171
date	2002.10.13.03.22.52;	author boogums;	state Exp;
branches;
next	1.170;

1.170
date	2002.10.06.22.49.42;	author boogums;	state Exp;
branches;
next	1.169;

1.169
date	2002.09.02.21.35.49;	author boogums;	state Exp;
branches;
next	1.168;

1.168
date	2002.05.12.14.00.17;	author rusty;	state Exp;
branches;
next	1.167;

1.167
date	2002.04.01.21.18.29;	author rusty;	state Exp;
branches;
next	1.166;

1.166
date	2002.03.12.04.57.18;	author rusty;	state Exp;
branches;
next	1.165;

1.165
date	2002.03.11.10.34.55;	author rusty;	state Exp;
branches;
next	1.164;

1.164
date	2002.03.10.22.42.20;	author mud;	state Exp;
branches;
next	1.163;

1.163
date	2002.03.09.20.02.13;	author rusty;	state Exp;
branches;
next	1.162;

1.162
date	2002.02.22.16.32.55;	author poquah;	state Exp;
branches;
next	1.161;

1.161
date	2002.02.11.20.11.34;	author poquah;	state Exp;
branches;
next	1.160;

1.160
date	2002.01.20.21.33.18;	author rage;	state Exp;
branches;
next	1.159;

1.159
date	2001.12.12.18.19.07;	author poquah;	state Exp;
branches;
next	1.158;

1.158
date	2001.11.25.01.26.39;	author rusty;	state Exp;
branches;
next	1.157;

1.157
date	2001.11.23.16.39.52;	author poquah;	state Exp;
branches;
next	1.156;

1.156
date	2001.11.23.16.17.15;	author poquah;	state Exp;
branches;
next	1.155;

1.155
date	2001.11.15.03.10.33;	author poquah;	state Exp;
branches;
next	1.154;

1.154
date	2001.10.02.23.59.56;	author rage;	state Exp;
branches;
next	1.153;

1.153
date	2001.09.22.17.41.18;	author rage;	state Exp;
branches;
next	1.152;

1.152
date	2001.08.30.01.03.23;	author guerrand;	state Exp;
branches;
next	1.151;

1.151
date	2001.07.15.20.01.20;	author boogums;	state Exp;
branches;
next	1.150;

1.150
date	2001.07.13.00.58.57;	author guerrand;	state Exp;
branches;
next	1.149;

1.149
date	2001.07.04.15.22.24;	author guerrand;	state Exp;
branches;
next	1.148;

1.148
date	2001.07.04.02.29.29;	author guerrand;	state Exp;
branches;
next	1.147;

1.147
date	2001.07.04.01.36.41;	author guerrand;	state Exp;
branches;
next	1.146;

1.146
date	2001.07.04.01.21.56;	author guerrand;	state Exp;
branches;
next	1.145;

1.145
date	2001.07.03.04.32.53;	author guerrand;	state Exp;
branches;
next	1.144;

1.144
date	2001.07.03.03.28.49;	author guerrand;	state Exp;
branches;
next	1.143;

1.143
date	2001.06.18.01.24.11;	author rage;	state Exp;
branches;
next	1.142;

1.142
date	2001.06.17.18.35.36;	author guerrand;	state Exp;
branches;
next	1.141;

1.141
date	2001.06.17.05.18.02;	author guerrand;	state Exp;
branches;
next	1.140;

1.140
date	2001.06.15.04.12.14;	author guerrand;	state Exp;
branches;
next	1.139;

1.139
date	2001.06.15.02.27.51;	author guerrand;	state Exp;
branches;
next	1.138;

1.138
date	2001.06.09.18.53.47;	author guerrand;	state Exp;
branches;
next	1.137;

1.137
date	2001.06.05.00.39.40;	author rage;	state Exp;
branches;
next	1.136;

1.136
date	2001.05.26.00.33.57;	author rage;	state Exp;
branches;
next	1.135;

1.135
date	2001.02.13.20.29.12;	author mud;	state Exp;
branches;
next	1.134;

1.134
date	2000.12.14.03.50.29;	author mud;	state Exp;
branches;
next	1.133;

1.133
date	2000.12.09.07.05.49;	author mud;	state Exp;
branches;
next	1.132;

1.132
date	2000.12.07.06.45.45;	author mud;	state Exp;
branches;
next	1.131;

1.131
date	2000.12.03.17.50.30;	author mud;	state Exp;
branches;
next	1.130;

1.130
date	2000.10.17.22.45.34;	author mud;	state Exp;
branches;
next	1.129;

1.129
date	2000.10.16.21.49.15;	author mud;	state Exp;
branches;
next	1.128;

1.128
date	2000.10.16.00.48.52;	author mud;	state Exp;
branches;
next	1.127;

1.127
date	2000.09.04.22.07.15;	author mud;	state Exp;
branches;
next	1.126;

1.126
date	2000.09.03.21.06.47;	author mud;	state Exp;
branches;
next	1.125;

1.125
date	2000.08.25.16.47.06;	author mud;	state Exp;
branches;
next	1.124;

1.124
date	2000.08.23.14.50.04;	author mud;	state Exp;
branches;
next	1.123;

1.123
date	2000.08.17.14.29.28;	author mud;	state Exp;
branches;
next	1.122;

1.122
date	2000.08.16.01.39.35;	author mud;	state Exp;
branches;
next	1.121;

1.121
date	2000.07.18.00.14.50;	author mud;	state Exp;
branches;
next	1.120;

1.120
date	2000.07.18.00.01.03;	author mud;	state Exp;
branches;
next	1.119;

1.119
date	2000.07.15.00.25.57;	author mud;	state Exp;
branches;
next	1.118;

1.118
date	2000.07.11.23.18.57;	author mud;	state Exp;
branches;
next	1.117;

1.117
date	2000.07.06.15.35.58;	author mud;	state Exp;
branches;
next	1.116;

1.116
date	2000.06.30.01.25.45;	author mud;	state Exp;
branches;
next	1.115;

1.115
date	2000.06.30.01.23.49;	author mud;	state Exp;
branches;
next	1.114;

1.114
date	2000.06.29.02.40.52;	author mud;	state Exp;
branches;
next	1.113;

1.113
date	2000.06.27.02.40.21;	author mud;	state Exp;
branches;
next	1.112;

1.112
date	2000.06.26.06.24.52;	author mud;	state Exp;
branches;
next	1.111;

1.111
date	2000.05.27.02.44.11;	author mud;	state Exp;
branches;
next	1.110;

1.110
date	2000.05.26.01.26.25;	author mud;	state Exp;
branches;
next	1.109;

1.109
date	2000.05.19.13.44.01;	author mud;	state Exp;
branches;
next	1.108;

1.108
date	2000.05.13.21.55.13;	author mud;	state Exp;
branches;
next	1.107;

1.107
date	2000.04.18.19.51.01;	author mud;	state Exp;
branches;
next	1.106;

1.106
date	2000.03.10.22.02.48;	author mud;	state Exp;
branches;
next	1.105;

1.105
date	2000.03.03.06.06.01;	author mud;	state Exp;
branches;
next	1.104;

1.104
date	2000.03.02.19.29.39;	author mud;	state Exp;
branches;
next	1.103;

1.103
date	2000.02.29.06.58.01;	author mud;	state Exp;
branches;
next	1.102;

1.102
date	2000.02.26.00.19.00;	author mud;	state Exp;
branches;
next	1.101;

1.101
date	2000.02.24.04.01.16;	author mud;	state Exp;
branches;
next	1.100;

1.100
date	2000.02.11.20.23.50;	author mud;	state Exp;
branches;
next	1.99;

1.99
date	2000.02.11.18.29.23;	author mud;	state Exp;
branches;
next	1.98;

1.98
date	2000.02.11.16.48.20;	author mud;	state Exp;
branches;
next	1.97;

1.97
date	2000.02.09.21.29.44;	author mud;	state Exp;
branches;
next	1.96;

1.96
date	2000.02.09.21.03.16;	author mud;	state Exp;
branches;
next	1.95;

1.95
date	2000.02.03.03.48.58;	author mud;	state Exp;
branches;
next	1.94;

1.94
date	2000.01.24.20.03.14;	author mud;	state Exp;
branches;
next	1.93;

1.93
date	99.12.19.21.04.17;	author mud;	state Exp;
branches;
next	1.92;

1.92
date	99.12.19.20.57.29;	author mud;	state Exp;
branches;
next	1.91;

1.91
date	99.12.19.20.12.38;	author mud;	state Exp;
branches;
next	1.90;

1.90
date	99.12.19.19.47.52;	author mud;	state Exp;
branches;
next	1.89;

1.89
date	99.12.12.18.00.41;	author mud;	state Exp;
branches;
next	1.88;

1.88
date	99.12.12.06.20.53;	author mud;	state Exp;
branches;
next	1.87;

1.87
date	99.12.09.20.04.05;	author mud;	state Exp;
branches;
next	1.86;

1.86
date	99.11.24.05.05.31;	author mud;	state Exp;
branches;
next	1.85;

1.85
date	99.11.24.01.25.25;	author mud;	state Exp;
branches;
next	1.84;

1.84
date	99.11.23.21.06.30;	author mud;	state Exp;
branches;
next	1.83;

1.83
date	99.11.23.19.52.14;	author mud;	state Exp;
branches;
next	1.82;

1.82
date	99.11.21.21.50.40;	author mud;	state Exp;
branches;
next	1.81;

1.81
date	99.11.05.08.19.14;	author mud;	state Exp;
branches;
next	1.80;

1.80
date	99.11.02.07.51.20;	author mud;	state Exp;
branches;
next	1.79;

1.79
date	99.10.31.02.23.26;	author mud;	state Exp;
branches;
next	1.78;

1.78
date	99.10.17.23.22.52;	author mud;	state Exp;
branches;
next	1.77;

1.77
date	99.10.17.22.56.45;	author mud;	state Exp;
branches;
next	1.76;

1.76
date	99.10.15.20.20.00;	author mud;	state Exp;
branches;
next	1.75;

1.75
date	99.10.10.19.55.42;	author mud;	state Exp;
branches;
next	1.74;

1.74
date	99.10.10.15.18.49;	author mud;	state Exp;
branches;
next	1.73;

1.73
date	99.10.08.20.16.08;	author mud;	state Exp;
branches;
next	1.72;

1.72
date	99.10.02.00.09.07;	author mud;	state Exp;
branches;
next	1.71;

1.71
date	99.09.02.03.43.13;	author mud;	state Exp;
branches;
next	1.70;

1.70
date	99.09.01.22.33.07;	author mud;	state Exp;
branches;
next	1.69;

1.69
date	99.09.01.22.23.20;	author mud;	state Exp;
branches;
next	1.68;

1.68
date	99.08.23.19.19.23;	author mud;	state Exp;
branches;
next	1.67;

1.67
date	99.08.23.03.34.46;	author mud;	state Exp;
branches;
next	1.66;

1.66
date	99.08.13.21.35.53;	author mud;	state Exp;
branches;
next	1.65;

1.65
date	99.08.13.18.48.34;	author mud;	state Exp;
branches;
next	1.64;

1.64
date	99.08.11.03.36.27;	author mud;	state Exp;
branches;
next	1.63;

1.63
date	99.08.01.16.33.51;	author mud;	state Exp;
branches;
next	1.62;

1.62
date	99.07.24.04.59.57;	author mud;	state Exp;
branches;
next	1.61;

1.61
date	99.07.23.20.08.29;	author mud;	state Exp;
branches;
next	1.60;

1.60
date	99.07.14.18.13.55;	author mud;	state Exp;
branches;
next	1.59;

1.59
date	99.07.13.07.26.56;	author mud;	state Exp;
branches;
next	1.58;

1.58
date	99.07.12.02.49.18;	author mud;	state Exp;
branches;
next	1.57;

1.57
date	99.07.10.00.11.37;	author mud;	state Exp;
branches;
next	1.56;

1.56
date	99.07.03.21.30.09;	author mud;	state Exp;
branches;
next	1.55;

1.55
date	99.06.24.22.37.23;	author mud;	state Exp;
branches;
next	1.54;

1.54
date	99.06.20.20.59.45;	author mud;	state Exp;
branches;
next	1.53;

1.53
date	99.05.30.20.29.06;	author mud;	state Exp;
branches;
next	1.52;

1.52
date	99.05.28.06.51.24;	author mud;	state Exp;
branches;
next	1.51;

1.51
date	99.05.26.03.27.33;	author mud;	state Exp;
branches;
next	1.50;

1.50
date	99.05.16.04.17.16;	author mud;	state Exp;
branches;
next	1.49;

1.49
date	99.05.15.16.39.03;	author mud;	state Exp;
branches;
next	1.48;

1.48
date	99.05.05.21.54.15;	author mud;	state Exp;
branches;
next	1.47;

1.47
date	99.05.03.08.00.18;	author mud;	state Exp;
branches;
next	1.46;

1.46
date	99.04.28.08.09.31;	author mud;	state Exp;
branches;
next	1.45;

1.45
date	99.04.20.17.11.24;	author mud;	state Exp;
branches;
next	1.44;

1.44
date	99.04.15.02.56.12;	author mud;	state Exp;
branches;
next	1.43;

1.43
date	99.04.12.22.42.01;	author mud;	state Exp;
branches;
next	1.42;

1.42
date	99.04.12.22.18.26;	author mud;	state Exp;
branches;
next	1.41;

1.41
date	99.04.10.06.17.25;	author mud;	state Exp;
branches;
next	1.40;

1.40
date	99.04.05.21.07.16;	author mud;	state Exp;
branches;
next	1.39;

1.39
date	99.01.12.20.24.27;	author mud;	state Exp;
branches;
next	1.38;

1.38
date	98.12.15.22.17.23;	author mud;	state Exp;
branches;
next	1.37;

1.37
date	98.12.13.21.38.19;	author mud;	state Exp;
branches;
next	1.36;

1.36
date	98.12.12.01.20.55;	author mud;	state Exp;
branches;
next	1.35;

1.35
date	98.12.09.08.32.17;	author mud;	state Exp;
branches;
next	1.34;

1.34
date	98.12.08.02.05.03;	author mud;	state Exp;
branches;
next	1.33;

1.33
date	98.12.05.09.50.19;	author mud;	state Exp;
branches;
next	1.32;

1.32
date	98.10.30.15.27.17;	author mud;	state Exp;
branches;
next	1.31;

1.31
date	98.10.30.03.01.54;	author mud;	state Exp;
branches;
next	1.30;

1.30
date	98.10.20.00.42.32;	author mud;	state Exp;
branches;
next	1.29;

1.29
date	98.10.19.07.19.04;	author mud;	state Exp;
branches;
next	1.28;

1.28
date	98.10.19.04.35.32;	author mud;	state Exp;
branches;
next	1.27;

1.27
date	98.10.19.01.38.42;	author mud;	state Exp;
branches;
next	1.26;

1.26
date	98.10.18.16.27.54;	author mud;	state Exp;
branches;
next	1.25;

1.25
date	98.10.12.19.49.14;	author mud;	state Exp;
branches;
next	1.24;

1.24
date	98.10.12.07.36.44;	author mud;	state Exp;
branches;
next	1.23;

1.23
date	98.10.12.07.28.54;	author mud;	state Exp;
branches;
next	1.22;

1.22
date	98.10.11.16.43.20;	author mud;	state Exp;
branches;
next	1.21;

1.21
date	98.10.11.06.51.38;	author mud;	state Exp;
branches;
next	1.20;

1.20
date	98.10.11.00.13.35;	author mud;	state Exp;
branches;
next	1.19;

1.19
date	98.10.09.05.29.49;	author mud;	state Exp;
branches;
next	1.18;

1.18
date	98.10.09.05.09.54;	author mud;	state Exp;
branches;
next	1.17;

1.17
date	98.10.09.04.04.13;	author mud;	state Exp;
branches;
next	1.16;

1.16
date	98.10.09.02.30.15;	author mud;	state Exp;
branches;
next	1.15;

1.15
date	98.10.02.23.39.34;	author mud;	state Exp;
branches;
next	1.14;

1.14
date	98.10.01.06.15.02;	author mud;	state Exp;
branches;
next	1.13;

1.13
date	98.09.03.14.20.06;	author mud;	state Exp;
branches;
next	1.12;

1.12
date	98.08.30.04.08.12;	author mud;	state Exp;
branches;
next	1.11;

1.11
date	98.08.30.03.59.57;	author mud;	state Exp;
branches;
next	1.10;

1.10
date	98.08.30.03.33.36;	author mud;	state Exp;
branches;
next	1.9;

1.9
date	98.08.20.21.05.33;	author mud;	state Exp;
branches;
next	1.8;

1.8
date	98.08.12.08.20.19;	author mud;	state Exp;
branches;
next	1.7;

1.7
date	98.08.10.21.32.53;	author mud;	state Exp;
branches;
next	1.6;

1.6
date	98.08.10.00.08.24;	author mud;	state Exp;
branches;
next	1.5;

1.5
date	98.08.07.20.19.59;	author mud;	state Exp;
branches;
next	1.4;

1.4
date	98.08.05.09.14.31;	author mud;	state Exp;
branches;
next	1.3;

1.3
date	98.08.04.18.03.07;	author mud;	state Exp;
branches;
next	1.2;

1.2
date	98.08.04.17.21.36;	author mud;	state Exp;
branches;
next	1.1;

1.1
date	98.06.16.17.49.35;	author mud;	state Exp;
branches;
next	;


desc
@@


1.198
log
@banishment will cause a clanners guard to attack them
snatch added to the game
boogums
@
text
@/***************************************************************************
 *  Or iginal Diku Mud copyright (C) 1990, 1991 by Sebastian Hammer,        *
 *  Michael Seifert, Hans Henrik St{rfeldt, Tom Madsen, and Katja Nyboe.   *
 *                                                                         *
 *  Merc Diku Mud improvments copyright (C) 1992, 1993 by Michael          *
 *  Chastain, Michael Quan, and Mitchell Tse.                              *
 *                                                                         *
 *  In order to use any part of this Merc Diku Mud, you must comply with   *
 *  both the original Diku license in 'license.doc' as well the Merc       *
 *  license in 'license.txt'.  In particular, you may not remove either of *
 *  these copyright notices.                                               *
 *                                                                         *
 *  Much time and thought has gone into this software and you are          *
 *  benefitting.  We hope that you share your changes too.  What goes      *
 *  around, comes around.                                                  *
 ***************************************************************************/

static char rcsid[] = "$Id: interp.c,v 1.197 2004/02/04 02:53:01 boogums Exp $";
#if defined(macintosh)
#include <types.h>
#else
#include <sys/types.h>
#endif
#include <ctype.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include "merc.h"
#include "interp.h"
#include "lookup.h"
#include "tables.h"
/*
 #include "imc-mercbase.h"
 #include "icec-mercbase.h"
 */


bool  check_social  args( ( CHAR_DATA *ch, char *command,
          char *argument ) );



/*
 * Command logging types.
 */
#define LOG_NORMAL  0
#define LOG_ALWAYS  1
#define LOG_NEVER   2



/*
 * Log-all switch.
 */
bool        fLogAll   = FALSE;



/*
 * Command table.
 */
const struct  cmd_type  cmd_table [] =
{
    /*
     * Common movement commands.
     */
    { "north",    do_north, POS_STANDING,    0,  LOG_NEVER, 0, 1 },
    { "east",   do_east,  POS_STANDING,  0,  LOG_NEVER, 0, 1 },
    { "south",    do_south, POS_STANDING,  0,  LOG_NEVER, 0, 1 },
    { "west",   do_west,  POS_STANDING,  0,  LOG_NEVER, 0, 1 },
    { "up",   do_up,    POS_STANDING,  0,  LOG_NEVER, 0, 1 },
    { "down",   do_down,  POS_STANDING,  0,  LOG_NEVER, 0, 1 },

    /*
     * Common other commands.
     * Placed here so one and two letter abbreviations work.
     */
    { "at",             do_at,          POS_DEAD,       L6,  LOG_NORMAL, 1, 0 },
    { "cast",   do_cast,  POS_FIGHTING,  0,  LOG_NORMAL, 1, 1 },
    { "chant", do_chant,	POS_FIGHTING, 0, LOG_NORMAL, 1, 1 },
    { "cgossip",        do_auction,     POS_SLEEPING,    1,  LOG_NORMAL, 1, 1 },
    { "create",		do_create,	POS_STANDING,	 1,  LOG_NORMAL,	1,1},
    { "buy",    do_buy,   POS_RESTING,   0,  LOG_NORMAL, 1, 1 },
    { "bounty",	do_bounty,	POS_STANDING,	1,	LOG_NORMAL, 1, 1 },
    { "channels",       do_channels,    POS_DEAD,        0,  LOG_NORMAL, 1, 0 },
    { "exits",    do_exits, POS_RESTING,   0,  LOG_NORMAL, 1, 1 },
    { "focus", do_focus,	POS_FIGHTING, 0, LOG_NORMAL, 1, 1 },
    { "get",    do_get,   POS_RESTING,   0,  LOG_NORMAL, 1, 1 },
    { "goto",           do_goto,        POS_DEAD,       L8,  LOG_NORMAL, 1, 0 },
    { "group",          do_group,       POS_SLEEPING,    0,  LOG_NORMAL, 1, 0 },
    { "grenade",	do_grenade,	POS_FIGHTING,	 0,	LOG_NORMAL, 1, 1 },
    { "guild",    do_guild, POS_DEAD, 25,  LOG_ALWAYS, 1, 0 },
    { "hit",    do_kill,  POS_FIGHTING,  0,  LOG_NORMAL, 0, 1 },
    { "hamstring", do_hamstring,POS_STANDING,0,LOG_NORMAL, 1, 1 },   
    { "highlander",    do_highlander, POS_DEAD, 0,  LOG_NORMAL, 1, 0 },
    { "inventory",  do_inventory, POS_RESTING,  0,  LOG_NORMAL, 1, 1 },
    { "look",   do_look,  POS_RESTING,   0,  LOG_NORMAL, 1, 1 },
    { "loot",    do_loot,   POS_RESTING,   0,  LOG_NORMAL, 1, 1 },
    { "level",    do_level,	POS_SLEEPING, 0, LOG_NORMAL, 1, 0 },
    { "clan",   do_clantalk,  POS_SLEEPING,  0,  LOG_NORMAL, 1, 0 },
    { "mount",	do_mount,	POS_STANDING, 0, LOG_NORMAL, 1, 1 },
    { "music",          do_music,     POS_SLEEPING,    1,  LOG_NORMAL, 1, 1 }, 
    { "order",    do_order, POS_RESTING,   0,  LOG_NORMAL, 1, 1 },
    { "ooc",	do_ooc,	POS_SLEEPING,    0,  LOG_NORMAL, 1, 1 },
    { "practice",       do_practice,  POS_SLEEPING,    0,  LOG_NORMAL, 1, 0 },
    { "rest",   do_rest,  POS_SLEEPING,  0,  LOG_NORMAL, 1, 1 },
    { "sit",    do_sit,   POS_SLEEPING,    0,  LOG_NORMAL, 1, 1 },
    { "stand",    do_stand, POS_SLEEPING,  0,  LOG_NORMAL, 1, 1 },
/*  { "spy",	do_spy,	POS_RESTING, 0, LOG_NORMAL, 1, 1 }, */
    { "surname",	do_surname,POS_SLEEPING,0,LOG_ALWAYS,1,0 },
    { "tell",   do_tell,  POS_SLEEPING,   0,  LOG_NORMAL, 1, 1 },
    { "unlock",         do_unlock,      POS_RESTING,     0,  LOG_NORMAL, 1, 1 },
    { "unwraith", do_wraithform_return, POS_STANDING, 0, LOG_NORMAL, 1, 0 },
    { "wield",    do_wear,  POS_RESTING,   0,  LOG_NORMAL, 1, 1 },
    { "wizhelp",  do_wizhelp, POS_DEAD, IM,  LOG_NORMAL, 1, 0 },

    /*
     * Informational commands.
     */
    { "affects",  do_affects, POS_SLEEPING,  0,  LOG_NORMAL, 1, 0 },
    { "abolish",  do_abolish, POS_STANDING, 0, LOG_NORMAL, 1, 1 },
    { "areas",    do_areas, POS_DEAD,  0,  LOG_NORMAL, 1, 0 },
    { "attributes", do_attributes, POS_SLEEPING,0,LOG_NORMAL,1,1 }, 
    { "attack", do_attack, POS_FIGHTING, 0, LOG_NORMAL, 1, 1 }, 
    { "bug",	do_bug,	POS_DEAD,	0,	LOG_NORMAL, 1, 0 },
    { "changes",  do_changes, POS_DEAD,  0,  LOG_NORMAL, 1, 0 },
    { "color",  do_color, POS_DEAD,  0,  LOG_NORMAL, 1, 0 },
    { "commands", do_commands,  POS_DEAD,  0,  LOG_NORMAL, 1, 0 },
    { "compare",  do_compare, POS_RESTING,   0,  LOG_NORMAL, 1, 1 },
    { "consider", do_consider,  POS_RESTING,   0,  LOG_NORMAL, 1, 1 },
    { "count",    do_count, POS_SLEEPING,  0,  LOG_NORMAL, 1, 0 },
    { "credits",  do_credits, POS_DEAD,  0,  LOG_NORMAL, 1, 0 },
    { "date",   do_time,  POS_DEAD,  0,  LOG_NORMAL, 1, 0 },
//    { "enemy",    do_enemy, POS_DEAD,  0,  LOG_NORMAL, 1, 0 },
    { "equipment",  do_equipment, POS_RESTING,  0,  LOG_NORMAL, 1, 1 },
    { "cstat",   do_cstat,  POS_DEAD,  0,  LOG_NORMAL, 1, 0 },
    { "examine",  do_examine, POS_RESTING,   0,  LOG_NORMAL, 1, 1 },
    { "glance",   do_glance,  POS_RESTING,  0,  LOG_NORMAL, 1, 1 },
    { "hd",    do_hd, POS_SLEEPING,  0,  LOG_NORMAL, 1, 0 },
    { "help",   do_help,  POS_DEAD,  0,  LOG_NORMAL, 1, 0 },
    { "hostmask",   do_hostmask,  POS_DEAD,  L1,  LOG_NEVER, 1, 0 },
    { "ignore",   do_ignore,  POS_DEAD,  0,  LOG_NORMAL, 1, 0 },
    { "idea",   do_idea,  POS_DEAD,  0,  LOG_NORMAL, 1, 0 },
    { "info",   do_groups,      POS_SLEEPING,    0,  LOG_NORMAL, 1, 0 },
    { "motd",   do_motd,  POS_DEAD,        0,  LOG_NORMAL, 1, 0 },
    { "name",	do_name,  POS_DEAD,	L5, LOG_NORMAL, 1, 0},
    { "news",   do_news,  POS_DEAD,  0,  LOG_NORMAL, 1, 0 },
    { "newbie",   do_newbie,  POS_SLEEPING,  0,  LOG_NORMAL, 1, 0 },
    { "onote",   do_onote,  POS_DEAD,  0,  LOG_NORMAL, 1, 0 },
    { "peek",   do_peek,  POS_RESTING,  0,  LOG_NORMAL, 1, 1 },
    { "read",   do_read,  POS_RESTING,   0,  LOG_NORMAL, 1, 0 },
    { "report",   do_report,  POS_RESTING,   0,  LOG_NORMAL, 1, 1 },
    { "rules",    do_rules, POS_DEAD,  0,  LOG_NORMAL, 1, 0 },
    { "rank",	do_rank,	POS_DEAD, 25,	LOG_NORMAL, 1, 0 },
    { "join",	do_join,	POS_DEAD, 5,	LOG_NORMAL, 1, 0 },
    { "outcas", do_outcas,	POS_DEAD, 5,	LOG_NORMAL, 0, 0 },
    { "outcast", do_outcast,	POS_DEAD, 5,	LOG_ALWAYS, 1, 0 },
    { "score",    do_score, POS_SLEEPING,  0,  LOG_NORMAL, 1, 0 },
    { "cscore",    do_cscore, POS_SLEEPING,  0,  LOG_NORMAL, 1, 0 },
    { "skills",   do_skills,  POS_DEAD,  0,  LOG_NORMAL, 1, 0 },
    { "socials",  do_socials, POS_DEAD,  0,  LOG_NORMAL, 1, 0 },
    { "show",   do_show,  POS_DEAD,  0,  LOG_NORMAL, 1, 1 },
    { "spells",	do_spells,	POS_DEAD,	0, LOG_NORMAL, 1, 0 },
    { "specializ", do_specializ, POS_DEAD, 0, LOG_NORMAL, 0, 0 }, 
    { "specialize", do_specialize, POS_DEAD, 0, LOG_NORMAL, 1, 0 },
    { "species",	do_species, POS_DEAD, 0, LOG_NORMAL, 1, 0 },
    { "story",    do_story, POS_DEAD,  0,  LOG_NORMAL, 1, 0 },
    { "time",   do_time,  POS_DEAD,  0,  LOG_NORMAL, 1, 0 },
    { "typo",   do_typo,  POS_DEAD,  0,  LOG_NORMAL, 1, 0 },
    { "weather",  do_weather, POS_RESTING,   0,  LOG_NORMAL, 1, 0 },
    { "who",    do_who,   POS_DEAD,  0,  LOG_NORMAL, 1, 0 },
    { "whois",    do_whois, POS_DEAD,  0,  LOG_NORMAL, 1, 0 },
    { "wizlist",  do_wizlist, POS_DEAD,        0,  LOG_NORMAL, 1, 0 },
    { "worth",    do_worth, POS_SLEEPING,  0,  LOG_NORMAL, 1, 0 },
 /* 
  { "deposit", do_deposit, POS_RESTING, 0, LOG_NORMAL, 1, 0 },
    { "withdraw", do_withdraw, POS_RESTING, 0, LOG_NORMAL, 1, 0 }, 
  */
  /*
     * Configuration commands.
     */
    
    { "alia",   do_alia,  POS_DEAD,  0,  LOG_NORMAL, 0, 0 },
    { "alias",    do_alias, POS_DEAD,  0,  LOG_NORMAL, 1, 0 },
    { "autolist", do_autolist,  POS_DEAD,  0,  LOG_NORMAL, 1, 0 },
    { "autoassist", do_autoassist,  POS_DEAD,        0,  LOG_NORMAL, 1, 0 },
    { "autoexit", do_autoexit,  POS_DEAD,        0,  LOG_NORMAL, 1, 0 },
    { "autogold", do_autogold,  POS_DEAD,        0,  LOG_NORMAL, 1, 0 },
    { "autoloot", do_autoloot,  POS_DEAD,        0,  LOG_NORMAL, 1, 0 },
    { "autopeek", do_autopeek,  POS_DEAD,        0,  LOG_NORMAL, 1, 0 },
    { "autosac",  do_autosac, POS_DEAD,        0,  LOG_NORMAL, 1, 0 },
    { "autosplit",  do_autosplit, POS_DEAD,        0,  LOG_NORMAL, 1, 0 },
    { "beeptell",  do_beeptell, POS_SLEEPING,    0,  LOG_NORMAL, 1, 0 },    
    { "brief",    do_brief, POS_DEAD,        0,  LOG_NORMAL, 1, 0 },
    { "combine",  do_combine, POS_DEAD,        0,  LOG_NORMAL, 1, 0 },
    { "compact",  do_compact, POS_DEAD,        0,  LOG_NORMAL, 1, 0 },
    { "description",  do_description, POS_DEAD,  0,  LOG_NORMAL, 1, 0 },
    { "delet",    do_delet, POS_DEAD,  0,  LOG_ALWAYS, 0, 0 },
    { "delete",   do_delete,  POS_STANDING,  0,  LOG_ALWAYS, 1, 0 },    
    { "dismount", do_dismount, POS_STANDING, 0, LOG_NORMAL, 1, 0 }, 
/*  { "display", do_display, POS_SLEEPING,	0, LOG_NORMAL, 1, 0 }, */
    { "fullsac", do_full_sac,  POS_DEAD,        0,  LOG_NORMAL, 1, 0 },
    { "gladiator", do_gladiator, POS_STANDING, 0, LOG_NORMAL, 1, 0 }, 
    { "gbet",    do_gbet,    POS_SLEEPING,     0, LOG_NORMAL, 1, 0},
    { "gscore",    do_gscore,    POS_SLEEPING,     0, LOG_NORMAL, 1, 0},
    { "gtell",    do_gtell, POS_DEAD,  0,  LOG_NORMAL, 1, 1 },
    { "gtscore",    do_gtscore,    POS_SLEEPING,     0, LOG_NORMAL, 1, 0},
    { "gstatus",   do_gstatus,    POS_SLEEPING,     0, LOG_NORMAL, 1, 0},
    { "longeq", do_longeq,  POS_DEAD,        0,  LOG_NORMAL, 1, 0 },
    { "loner",  do_loner,      POS_DEAD,    5,  LOG_ALWAYS, 1, 0 },
    { "nocancel", do_nocancel,  POS_DEAD,        0,  LOG_NORMAL, 1, 0 },
    { "nooutofrange", do_nooutofrange,  POS_DEAD, 0,  LOG_NORMAL, 1, 0 },
    { "norecall", do_norecall,	POS_DEAD,	0, LOG_NORMAL, 1, 0 },
    { "norescue", do_norescue,  POS_DEAD,        0,  LOG_NORMAL, 1, 0 },
    { "nofollow", do_nofollow,  POS_DEAD,        0,  LOG_NORMAL, 1, 0 },
    { "nowake", do_nowake,  POS_DEAD,        0,  LOG_NORMAL, 1, 0 },
    { "noloot",   do_noloot,  POS_DEAD,        0,  LOG_NORMAL, 1, 0 },
    { "nosummon", do_nosummon,  POS_DEAD,        0,  LOG_NORMAL, 1, 0 },
    { "nogladiator", do_nogladiator,  POS_DEAD,  0,  LOG_NORMAL, 1, 0 },
    { "odds", do_odds,  POS_SLEEPING,  0,  LOG_NORMAL, 1, 0 },
    { "outfit",   do_outfit,  POS_RESTING,   0,  LOG_NORMAL, 1, 0 },
    { "password", do_password,  POS_DEAD,  0,  LOG_NEVER,  1, 0 },
    { "prompt",   do_prompt,  POS_DEAD,        0,  LOG_NORMAL, 1, 0 },
    { "scroll",   do_scroll,  POS_DEAD,  0,  LOG_NORMAL, 1, 0 },
    { "unmacro",        do_unmacro,     POS_DEAD, L7,  LOG_NORMAL, 1, 0 },
    { "title",    do_title, POS_DEAD,  0,  LOG_NORMAL, 1, 0 },
    { "unalias",  do_unalias, POS_DEAD,  0,  LOG_NORMAL, 1, 0 },
    { "wimpy",    do_wimpy, POS_DEAD,  0,  LOG_NORMAL, 1, 0 },

    /*
     * Communication commands.
     */
    { "afk",    do_afk,   POS_SLEEPING,  0,  LOG_NORMAL, 1, 0 },
    { "answer",   do_answer,  POS_SLEEPING,  0,  LOG_NORMAL, 1, 1 },
    { "deaf",   do_deaf,  POS_DEAD,  0,  LOG_NORMAL, 1, 0 },
    { "emote",    do_emote, POS_RESTING,   0,  LOG_NORMAL, 1, 1 },
    { "pmote",    do_pmote, POS_RESTING,   0,  LOG_NORMAL, 1, 1 },
  /*  { "bitch",  do_bitch, POS_RESTING, 1, LOG_NORMAL, 1, 1}, */
    { ".",    do_gossip,  POS_SLEEPING,  1,  LOG_NORMAL, 0, 1 },
    { "]",	do_ooc,	POS_SLEEPING,    1,  LOG_NORMAL, 1, 1 },
    { "gossip",   do_gossip,  POS_SLEEPING,  1,  LOG_NORMAL, 1, 1 },
    { ",",    do_emote, POS_RESTING,   0,  LOG_NORMAL, 0, 1 },
    { "grats",    do_grats, POS_SLEEPING,  1,  LOG_NORMAL, 1, 1 },
    { ";",    do_gtell, POS_DEAD,  0,  LOG_NORMAL, 0, 1 },
    { "inote",   do_note,  POS_SLEEPING,  0,  LOG_NORMAL, 1, 0 },
    { "cnote",  do_cnotes, POS_SLEEPING, 0, LOG_NORMAL, 1, 0 },
    { "pose",   do_pose,  POS_RESTING,   0,  LOG_NORMAL, 1, 1 },
    { "?"  , do_question,  POS_SLEEPING,  0,  LOG_NORMAL, 1, 1 },
    { "quest",    do_quest, POS_SLEEPING,  1,  LOG_NORMAL, 1, 1 },
    { "quiet",    do_quiet, POS_SLEEPING,    0,  LOG_NORMAL, 1, 0 },
    { "qnote",  do_qnotes, POS_SLEEPING, 0, LOG_NORMAL, 1, 0 },
    { "reply",    do_reply, POS_SLEEPING,  0,  LOG_NORMAL, 1, 0 },
    { "replay",   do_replay,  POS_SLEEPING,  0,  LOG_NORMAL, 1, 0 },
    { "say",    do_say,   POS_RESTING,   0,  LOG_NORMAL, 1, 1 },
    { "'",    do_say,   POS_RESTING,   0,  LOG_NORMAL, 0, 1 },


/*    { "shout",    do_shout, POS_RESTING,   3,  LOG_NORMAL, 1, 1 }, */
    { "silence", do_silence, POS_SLEEPING, 0, LOG_NORMAL, 1, 0 },  
    { "unread",   do_unread,  POS_SLEEPING,    0,  LOG_NORMAL, 1, 0 },
    { "spool",   do_spool,  POS_SLEEPING,    0,  LOG_NORMAL, 1, 0 },
    { "yell",   do_yell,  POS_RESTING,   0,  LOG_NORMAL, 1, 1 },

    /*
     * Object manipulation commands.
     */
    { "assemble", do_assemble, POS_STANDING, 0, LOG_NORMAL, 1,0 },
    { "brandish", do_brandish,  POS_FIGHTING,   0,  LOG_NORMAL, 1, 1 },
    { "brew",	do_brew,	POS_STANDING,	0,	LOG_NORMAL, 1, 1 },
    { "close",    do_close, POS_RESTING,   0,  LOG_NORMAL, 1, 1 },
    { "drink",    do_drink, POS_RESTING,   0,  LOG_NORMAL, 1, 1 },
    { "drop",   do_drop,  POS_RESTING,   0,  LOG_NORMAL, 1, 1 },
    { "drag",    do_drag, POS_RESTING,   0,  LOG_ALWAYS, 1, 1 },
    { "eat",    do_eat,   POS_RESTING,   0,  LOG_NORMAL, 1, 1 },
    { "endow", do_endow, POS_STANDING,   0,  LOG_NORMAL, 1, 1 },
    { "envenom",  do_envenom, POS_RESTING,   0,  LOG_NORMAL, 1, 1 },
    { "fill",   do_fill,  POS_RESTING,   0,  LOG_NORMAL, 1, 1 },
    { "forge",   do_forge,  POS_STANDING,   0,  LOG_NORMAL, 1, 0 },
    { "getvoucher", do_get_voucher, POS_STANDING, 0, LOG_NORMAL, 1, 0 },
    { "give",   do_give,  POS_RESTING,   0,  LOG_NORMAL, 1, 1 },
    { "glick",  do_lick,  POS_RESTING,	 0,  LOG_NORMAL, 1, 1 }, 
    { "heal",   do_heal,  POS_RESTING,   0,  LOG_NORMAL, 1, 1 }, 
    { "hold",   do_wear,  POS_RESTING,   0,  LOG_NORMAL, 1, 1 },
    { "infuse", do_infuse, POS_STANDING, 0,  LOG_NORMAL, 1, 1 },
    { "list",   do_list,  POS_RESTING,   0,  LOG_NORMAL, 1, 0 },
    { "lock",   do_lock,  POS_RESTING,   0,  LOG_NORMAL, 1, 1 },
    { "morph",   do_morph,  POS_STANDING,   0,  LOG_NORMAL, 1, 1 },
    { "open",   do_open,  POS_RESTING,   0,  LOG_NORMAL, 1, 1 },
    { "pick",   do_pick,  POS_RESTING,   0,  LOG_NORMAL, 1, 1 },
    { "pour",   do_pour,  POS_RESTING,   0,  LOG_NORMAL, 1, 1 },
    { "put",    do_put,   POS_RESTING,   0,  LOG_NORMAL, 1, 1 },
    { "quaff",    do_quaff, POS_FIGHTING,   0,  LOG_NORMAL, 1, 1 },
    { "recite",   do_recite,  POS_FIGHTING,   0,  LOG_NORMAL, 1, 1 },
    { "remove",   do_remove,  POS_RESTING,   0,  LOG_NORMAL, 1, 1 },
    { "sell",   do_sell,  POS_RESTING,   0,  LOG_NORMAL, 1, 1 },
    { "take",   do_get,   POS_RESTING,   0,  LOG_NORMAL, 1, 1 },
    { "sacrifice",  do_sacrifice, POS_RESTING,   0,  LOG_NORMAL, 1, 0 },
    { "scribe", do_scribe, POS_STANDING,    0,  LOG_NORMAL, 1, 1},
//    { "shapeshift",   do_shapeshift,  POS_STANDING,   0,  LOG_NORMAL, 1, 1 },
//    { "shapemorph",   do_shapemorph,  POS_STANDING,   0,  LOG_ALWAYS, 1, 1 },
    { "junk",           do_sacrifice,   POS_RESTING,     0,  LOG_NORMAL, 0, 1 },
    { "tap",        do_sacrifice,   POS_RESTING,     0,  LOG_NORMAL, 0, 1 },   
    { "value",    do_value, POS_RESTING,   0,  LOG_NORMAL, 1, 1 },
    { "wear",   do_wear,  POS_RESTING,   0,  LOG_NORMAL, 1, 1 },
    { "zap",    do_zap,   POS_FIGHTING,   0,  LOG_NORMAL, 1, 1 },

    /*
     * Combat commands.
     */
    { "backstab", do_backstab,  POS_FIGHTING,  0,  LOG_NORMAL, 1, 1 },
    { "bash",   do_bash,  POS_FIGHTING,    0,  LOG_NORMAL, 1, 1 },
    { "bs",   do_backstab,  POS_FIGHTING,  0,  LOG_NORMAL, 0, 1 },
    { "berserk",  do_berserk, POS_FIGHTING,  0,  LOG_NORMAL, 1, 1 },
    { "bite",  do_bite, POS_FIGHTING,  0,  LOG_NORMAL, 1, 1 },
    { "bladesong", do_bladesong, POS_FIGHTING, 0, LOG_NORMAL, 1, 1 },
    { "breathe",  do_breathe, POS_FIGHTING,  0,  LOG_NORMAL, 1, 1 },
    { "dbite", do_dbite, POS_FIGHTING, 0, LOG_NORMAL, 0, 1 },  
    { "bleed",  do_bleed, POS_FIGHTING,  0,  LOG_NORMAL, 1, 0 },
    { "daetok", do_dae_tok, POS_STANDING, 0, LOG_NORMAL, 0, 1 },
    { "dbite",	do_dbite, POS_FIGHTING,  0, LOG_NORMAL, 0, 1 }, 
    { "dirt",   do_dirt,  POS_FIGHTING,  0,  LOG_NORMAL, 1, 1 },
    { "disarm",   do_disarm,  POS_FIGHTING,  0,  LOG_NORMAL, 1, 1 },
    { "fear",  do_fear, POS_FIGHTING,  0,  LOG_NORMAL, 1, 1 },
    { "flee",   do_flee,  POS_FIGHTING,  0,  LOG_NORMAL, 1, 1 },
    { "grab",   do_grab,  POS_FIGHTING,    0,  LOG_NORMAL, 1, 1 },
    { "garotte",   do_garotte,  POS_STANDING,  0,  LOG_NORMAL, 1, 1 },
    { "hex",  do_hex, POS_FIGHTING,  0,  LOG_NORMAL, 1, 1 },
    { "insanity",   do_insanity,  POS_FIGHTING,  0,  LOG_NORMAL, 1, 1 },
    { "kick",   do_kick,  POS_FIGHTING,  0,  LOG_NORMAL, 1, 1 },
/* 2 Lines below added 03SEP00 by Boogums */
    { "kcharge",   do_kcharge, POS_FIGHTING,  0,  LOG_NORMAL, 1, 1 },
    { "kc",   do_kcharge, POS_FIGHTING,  0,  LOG_NORMAL, 1, 1 },
    { "knock", do_knock, POS_RESTING,   0,  LOG_NORMAL, 1, 1 },
    { "kill",   do_kill,  POS_FIGHTING,  0,  LOG_NORMAL, 1, 1 },
    { "murde",    do_murde, POS_FIGHTING,  0,  LOG_NORMAL, 0, 0 },
    { "murder",   do_murder,  POS_FIGHTING,  1,  LOG_NORMAL, 1, 1 },
    { "rage",	do_rage,	POS_FIGHTING,	0, LOG_NORMAL, 1, 1 },
    { "rescue",   do_rescue,  POS_FIGHTING,  0,  LOG_NORMAL, 0, 1 },
    { "throw",   do_throw,  POS_FIGHTING,    0,  LOG_NORMAL, 1, 1 },
    { "trip",   do_trip,  POS_FIGHTING,    0,  LOG_NORMAL, 1, 1 },
    { "trap",	do_trap,  POS_STANDING,	0,	LOG_NORMAL, 1, 1 },
    { "tail", do_tail_slap, POS_FIGHTING, 0, LOG_NORMAL, 1, 1 }, 
    /*
     * Miscellaneous commands.
     */
    { "die",   do_die,  POS_DEAD,  0,  LOG_NORMAL, 1, 0 },
    { "display", do_display, POS_SLEEPING,      0, LOG_NORMAL, 1, 0 }, 
    { "enter",    do_enter,   POS_STANDING,  0,  LOG_NORMAL, 1, 1 },
    { "fade",	do_fade,	POS_RESTING, 0, LOG_NORMAL, 0, 1 },
    { "follow",   do_follow,  POS_RESTING,   0,  LOG_NORMAL, 1, 1 },
    { "gain",   do_gain,  POS_STANDING,  0,  LOG_NORMAL, 1, 0 },
    { "groups",   do_groups,  POS_SLEEPING,    0,  LOG_NORMAL, 1, 0 },
    { "hide",   do_hide,  POS_STANDING,   0,  LOG_NORMAL, 1, 1 },
    { "kr",   do_kr,      POS_RESTING,    5,  LOG_NORMAL, 1, 0 },
    { "kit",	do_kit,	POS_SLEEPING,	 1,	LOG_ALWAYS, 1, 0 },
    { "pray",   do_pray,  POS_FIGHTING,   0,  LOG_NORMAL, 1, 0 },
    { "pledg",  do_pledg, POS_DEAD,    0, LOG_NORMAL, 1, 0},
    { "pledge",   do_pledge,  POS_DEAD,   0,  LOG_NORMAL, 1, 0 },
    { "qui",    do_qui,   POS_DEAD,  0,  LOG_NORMAL, 0, 0 },
    { "quit",   do_quit_command,  POS_DEAD,  0,  LOG_NORMAL, 1, 0 },
    { "quicken",   do_quicken,  POS_FIGHTING,  0,  LOG_NORMAL, 1, 1 },
    { "roar",   do_roar,  POS_RESTING,   0,  LOG_NORMAL, 1, 1 },
    { "recall",   do_recall,  POS_FIGHTING,  0,  LOG_NORMAL, 1, 1 },
    { "/",    do_recall,  POS_FIGHTING,  0,  LOG_NORMAL, 0, 1 },
    { "rent",   do_rent,  POS_DEAD,  0,  LOG_NORMAL, 0, 1 },
    { "ritual", do_ritual, POS_STANDING, 0, LOG_NORMAL, 1, 0 },
    { "save",   do_save,  POS_DEAD,  0,  LOG_NORMAL, 1, 0 },
    { "sanction", do_sanction, POS_DEAD, 0, LOG_NORMAL, 1, 0 },
    { "sharpen", do_sharpen,POS_RESTING,   0,  LOG_NORMAL, 1, 1 },
    { "sleep",    do_sleep, POS_SLEEPING,  0,  LOG_NORMAL, 1, 1 },
    { "slice",	do_slice, POS_STANDING,	   0,  LOG_NORMAL, 1,  1 },
    { "sneak",    do_sneak, POS_STANDING,  0,  LOG_NORMAL, 1, 1 },
    { "snatch", do_snatch, POS_STANDING, 0, LOG_NORMAL, 1, 0 },
    { "split",    do_split, POS_RESTING,   0,  LOG_NORMAL, 1, 1 },
    { "steal",    do_steal, POS_STANDING,  0,  LOG_NORMAL, 1, 0 },
    { "study", do_copyspell, POS_STANDING, 0, LOG_NORMAL, 1, 0 },
    { "trade",	do_trade,	POS_RESTING, 0, LOG_NORMAL, 1, 0 },
    { "train",    do_train, POS_RESTING,   0,  LOG_NORMAL, 1, 0 },
    { "visible",  do_visible, POS_SLEEPING,  0,  LOG_NORMAL, 1, 1 },
    { "wake",   do_wake,  POS_SLEEPING,  0,  LOG_NORMAL, 1, 1 },
    { "where",    do_where, POS_RESTING,   0,  LOG_NORMAL, 1, 0 },
    { "scan",    do_where, POS_RESTING,   0,  LOG_NORMAL, 1, 1 },
    { "shieldbash", do_shieldbash, POS_FIGHTING, 0, LOG_NORMAL, 1, 1 },



    /*
     * Immortal commands.
     */
    { "advance",  do_advance, POS_DEAD, L1,  LOG_ALWAYS, 1, 0 },
    { "dump",   do_dump,  POS_DEAD, ML,  LOG_ALWAYS, 0, 0 },
    { "eqlist",   do_eqlist,  POS_DEAD, L1,  LOG_ALWAYS, 0, 0 },
    { "trust",    do_trust, POS_DEAD, ML,  LOG_ALWAYS, 1, 0 },
    { "violate",  do_violate, POS_DEAD, L1,  LOG_ALWAYS, 1, 0 },
    { "allow",    do_allow, POS_DEAD, L1,  LOG_ALWAYS, 1, 0 },
    { "ban",    do_ban,   POS_DEAD, L1,  LOG_ALWAYS, 1, 0 },
    { "dns",    do_dns,   POS_DEAD, L3,  LOG_ALWAYS, 1, 0 },
    { "undns",    do_undns,   POS_DEAD, L3,  LOG_ALWAYS, 1, 0 },
    { "deny",   do_deny,  POS_DEAD, L1,  LOG_ALWAYS, 1, 0 },
#ifdef OLC_VERSION
    { "edit",    do_edit,  POS_DEAD, L3,  LOG_ALWAYS, 1, 0 },
    { "matlog",    do_matlog,  POS_DEAD, L1,  LOG_ALWAYS, 1, 0 },
    { "ftick", do_ftick, POS_DEAD, L1, LOG_ALWAYS, 1, 0 },
#endif
    { "bflag",   do_bflag, POS_DEAD, L1,  LOG_ALWAYS, 1, 0 },
    { "disconnect", do_disconnect,  POS_DEAD, L1,  LOG_ALWAYS, 1, 0 },
    { "doublexp", do_doublexp, POS_DEAD, 59, LOG_ALWAYS, 1,0 },  
    { "dweeb",    do_dweeb, POS_DEAD, L1,  LOG_ALWAYS, 1, 0 },
    { "explode", do_explode, POS_DEAD, 55, LOG_ALWAYS, 1, 0 },
    { "flag",   do_flag,  POS_DEAD, L1,  LOG_ALWAYS, 1, 0 },
    { "freeze",   do_freeze,  POS_DEAD, L1,  LOG_ALWAYS, 1, 0 },
    { "fuck",	do_fuck,    POS_DEAD,	L1,  LOG_ALWAYS, 1, 0 },
    { "ident",	do_ident,  POS_DEAD,	L1,  LOG_ALWAYS, 1, 0 },
    { "listen", do_listen, POS_DEAD,	L5, LOG_NORMAL, 1,  0 },
    { "ctalk",  do_ctalk, POS_DEAD,     L5, LOG_NORMAL, 1,  0 },
    { "permban",  do_permban, POS_DEAD, L1,  LOG_ALWAYS, 1, 0 },
    { "pload", do_pload, POS_DEAD, L2, LOG_ALWAYS, 1, 0 },
    { "pnet",   do_pnet,  POS_DEAD, 1,  LOG_NORMAL, 1, 0 },
    { "punload", do_punload, POS_DEAD, L2, LOG_ALWAYS, 1,  0 },
    { "protect",  do_protect, POS_DEAD, L1,  LOG_ALWAYS, 1, 0 },
    { "remort",    do_remort, POS_DEAD, 51,  LOG_ALWAYS, 1, 0 },
    { "reclas",    do_reclas, POS_DEAD, 26,  LOG_NORMAL, 1, 0 },
    { "reclass",    do_reclass, POS_DEAD,  1,  LOG_ALWAYS, 1, 0 },
    { "reboo",    do_reboo, POS_DEAD, L3,  LOG_NORMAL, 0, 0 },
    { "reboot",   do_reboot,  POS_DEAD, L1,  LOG_ALWAYS, 1, 0 },
    { "rename", do_rename, POS_DEAD, 58, LOG_ALWAYS, 1, 0 },
    { "set",    do_set,   POS_DEAD, 58,  LOG_ALWAYS, 1, 0 },
    { "shutdow",  do_shutdow, POS_DEAD, L3,  LOG_NORMAL, 0, 0 },
    { "shutdown", do_shutdown,  POS_DEAD, L1,  LOG_ALWAYS, 1, 0 },
/*    { "socket",   do_socke,     POS_DEAD, L1,  LOG_NORMAL, 1, 0 }, */
    { "sockets",        do_sockets, POS_DEAD,       L1,  LOG_NORMAL, 1, 0 },
    { "reward", do_reward,	 POS_DEAD, L5, LOG_ALWAYS, 1, 0 },
    { "spreward", do_spreward,	 POS_DEAD, L5, LOG_ALWAYS, 1, 0 },
    { "wizlock",  do_wizlock, POS_DEAD, L1,  LOG_ALWAYS, 1, 0 },
    { "dispvnum", do_dispvnum,    POS_DEAD, L7,  LOG_NORMAL, 1, 0 },
    { "force",    do_force, POS_DEAD, L7,  LOG_ALWAYS, 1, 0 },
    { "lag",	do_lag,	POS_DEAD, L5, LOG_ALWAYS, 1, 0 }, 
    { "load",   do_load,  POS_DEAD, L1,  LOG_ALWAYS, 1, 0 },
    { "newlock",  do_newlock, POS_DEAD, L1,  LOG_ALWAYS, 1, 0 },
    { "nochannels", do_nochannels,  POS_DEAD, L5,  LOG_ALWAYS, 1, 0 },
    { "no-dns", do_no_dns, POS_DEAD, L5, LOG_ALWAYS, 1, 0 },
    { "noemote",  do_noemote, POS_DEAD, L5,  LOG_ALWAYS, 1, 0 },
    { "nonotes",  do_nonotes, POS_DEAD, L5,  LOG_ALWAYS, 1, 0 }, 
    { "noshout",  do_noshout, POS_DEAD, L5,  LOG_ALWAYS, 1, 0 },
    { "notel",   do_notel,  POS_DEAD, L5,  LOG_NORMAL, 0, 0 },
    { "notell",   do_notell,  POS_DEAD, L5,  LOG_ALWAYS, 1, 0 },
    { "notitle",  do_notitle, POS_DEAD, L7, LOG_ALWAYS, 1, 0 },
    { "pecho",    do_pecho, POS_DEAD, L4,  LOG_ALWAYS, 1, 0 }, 
    { "pardon",   do_pardon,  POS_DEAD, L1,  LOG_ALWAYS, 1, 0 },
    { "pur",      do_pur, POS_DEAD, L4,  LOG_ALWAYS, 1, 0 },
    { "purge",    do_purge, POS_DEAD, L4,  LOG_ALWAYS, 1, 0 },
    { "restore",  do_restore, POS_DEAD, L1,  LOG_ALWAYS, 1, 0 },
    { "sla",    do_sla,   POS_DEAD, L3,  LOG_NORMAL, 0, 0 },
    { "slay",   do_slay,  POS_DEAD, L1,  LOG_ALWAYS, 1, 0 },
    { "teleport", do_transfer,    POS_DEAD, L5,  LOG_ALWAYS, 1, 0 }, 
    { "transfer", do_transfer,  POS_DEAD, L5,  LOG_ALWAYS, 1, 0 },
    { "poofin",   do_bamfin,  POS_DEAD, L8,  LOG_NORMAL, 1, 0 },
    { "poofout",  do_bamfout, POS_DEAD, L8,  LOG_NORMAL, 1, 0 },
    { "gecho",    do_echo,  POS_DEAD, L1,  LOG_ALWAYS, 1, 0 },
    { "holylight",  do_holylight, POS_DEAD, IM,  LOG_NORMAL, 1, 0 },
    { "incognito",  do_incognito, POS_DEAD, IM,  LOG_NORMAL, 1, 0 },
    { "invis",    do_invis, POS_DEAD, IM,  LOG_NORMAL, 1, 0 },
    { "log",    do_log,   POS_DEAD, L1,  LOG_ALWAYS, 1, 0 },
    { "memory",   do_memory,  POS_DEAD, IM,  LOG_NORMAL, 1, 0 },
    { "mwhere",   do_mwhere,  POS_DEAD, L7,  LOG_NORMAL, 1, 0 },
    { "noreply",  do_noreply, POS_DEAD, IM,  LOG_NORMAL, 1, 0 },
    { "olist",    do_olist, POS_DEAD, L7, LOG_ALWAYS, 1,0 },
    { "owhere",   do_owhere,  POS_DEAD, L7,  LOG_NORMAL, 1, 0 },
    { "peace",    do_peace, POS_DEAD, L1,  LOG_NORMAL, 1, 0 },
    { "penalty",  do_penalty, POS_DEAD, L7,  LOG_NORMAL, 1, 0 }, 
    { "echo",   do_recho, POS_DEAD, L6,  LOG_ALWAYS, 1, 0 },
    { "return",   do_return,   POS_DEAD,  L1,  LOG_NORMAL, 1, 0 },
    { "skstat",   do_skstat, POS_DEAD, 25, LOG_ALWAYS, 1, 0},
    { "snoop",    do_snoop, POS_DEAD, L1,  LOG_ALWAYS, 1, 0 },
    { "stat",   do_stat,  POS_DEAD, L7,  LOG_ALWAYS, 1, 0 },
    { "startgladiator",do_startgladiator,POS_DEAD,L3,LOG_ALWAYS, 1, 0 },
    { "endgladiator",do_endgladiator,POS_DEAD,L3,LOG_ALWAYS, 1, 0 },
    { "skipbet",do_skipbet,POS_DEAD,L3,LOG_ALWAYS, 1, 0 },
    { "removegladiator",do_removegladiator,POS_DEAD,L3,LOG_ALWAYS, 1, 0 },
    { "setcouncil", do_setcouncil, POS_DEAD, L1, LOG_ALWAYS, 1, 0},
    { "string",   do_string,  POS_DEAD, L5,  LOG_ALWAYS, 1, 0 },
    { "switch",   do_switch,  POS_DEAD, L1,  LOG_ALWAYS, 1, 0 },
    { "wizinvis", do_invis, POS_DEAD, IM,  LOG_NORMAL, 1, 0 },
    { "vnum",   do_vnum,  POS_DEAD, L7,  LOG_NORMAL, 1, 0 },
    { "zecho",    do_zecho, POS_DEAD, L4,  LOG_ALWAYS, 1, 0 },
    { "clone",    do_clone, POS_DEAD, L1,  LOG_ALWAYS, 1, 0 },
    { "wiznet",   do_wiznet,  POS_DEAD, IM,  LOG_NORMAL, 1, 0 },
    { "immtalk",  do_immtalk, POS_DEAD, IM,  LOG_NORMAL, 1, 0 },
    { "gnote",   do_immnote,  POS_SLEEPING,  L7,  LOG_NORMAL, 1, 0 },
    { "immload",   do_imm_loads,  POS_DEAD, L1,  LOG_ALWAYS, 0, 0 },
    { "imotd", do_imotd, POS_DEAD,       IM,  LOG_NORMAL, 1, 0 },
    { ":",    do_immtalk, POS_DEAD, IM,  LOG_NORMAL, 0, 0 },
    { "icg", do_icg, POS_DEAD,   L1,  LOG_ALWAYS, 1, 0 },
    { "smote",    do_smote, POS_DEAD, IM,  LOG_NORMAL, 1, 0 },
    { "macro",    do_macro, POS_DEAD,  L7,  LOG_NORMAL, 1, 0 },    

    /*
     * IMC commands

    { "rtell",          do_rtell,       POS_SLEEPING,   0,   LOG_NORMAL, 1, 0 },
    { "rreply",         do_rreply,      POS_SLEEPING,   0,   LOG_NORMAL, 1, 0 },
    { "rwho",           do_rwho,        POS_SLEEPING,   0,   LOG_NORMAL, 1, 0 },
    { "rwhois",         do_rwhois,      POS_SLEEPING,   0,   LOG_NORMAL, 1, 0 },
    { "rquery",         do_rquery,      POS_SLEEPING,   0,   LOG_NORMAL, 1, 0 },
    { "rfinger",        do_rfinger,     POS_SLEEPING,   0,   LOG_NORMAL, 1, 0 },
    { "imc",            do_imc,         POS_DEAD,      L1,   LOG_ALWAYS, 1, 0 },
    { "imclist",        do_imclist,     POS_DEAD,       0,   LOG_NORMAL, 1, 0 },
    { "rbeep",          do_rbeep,       POS_SLEEPING,   0,   LOG_NORMAL, 1, 0 },
    { "istats",         do_istats,      POS_DEAD,       0,   LOG_NORMAL, 1, 0 },
    { "rchannels",      do_rchannels,   POS_DEAD,       0,   LOG_NORMAL, 1, 0 },

     */
    /* IMC imm commands

    { "rinfo",          do_rinfo,       POS_DEAD,       0,   LOG_NORMAL, 1, 0 },
    { "rsockets",       do_rsockets,    POS_DEAD,      IM,   LOG_NORMAL, 1, 0 },
    { "rconnect",       do_rconnect,    POS_DEAD,      L3,   LOG_ALWAYS, 1, 0 },
    { "rdisconnect",    do_rdisconnect, POS_DEAD,      L3,   LOG_ALWAYS, 1, 0 },
    { "rignore",        do_rignore,     POS_DEAD,      L3,   LOG_ALWAYS, 1, 0 },
    { "rchanset",       do_rchanset,    POS_DEAD,      L5,   LOG_ALWAYS, 1, 0 },
    { "mailqueue",      do_mailqueue,   POS_DEAD,      L4,   LOG_NORMAL, 1, 0 },
    { "icommand",       do_icommand,    POS_DEAD,      IM,   LOG_NORMAL, 1, 0 },
    { "isetup",         do_isetup,      POS_DEAD,      IM,   LOG_NORMAL, 1, 0 },
    { "ilist",          do_ilist,       POS_DEAD,       0,   LOG_NORMAL, 1, 0 },
    { "ichannels",      do_ichannels,   POS_DEAD,       0,   LOG_NORMAL, 1, 0 },
    { "rping",          do_rping,       POS_DEAD,      L3,   LOG_NORMAL, 1, 0 },
     */
    /*
     * End of list.
     */
    { "",   0,    POS_DEAD,  0,  LOG_NEVER, 0, 0 }
};




/*
 * The main entry point for executing commands.
 * Can be recursively called from 'at', 'order', 'force'.
 */
void interpret( CHAR_DATA *ch, char *argument )
{
    char command[MAX_INPUT_LENGTH];
    char logline[MAX_INPUT_LENGTH];
    int cmd,trust,immc=-1,icgb=0;
    sh_int icg=0;
    bool found;
    int strings = nAllocString;
    int permc = nAllocPerm;
    char commc[MAX_INPUT_LENGTH];
    char buf[MAX_STRING_LENGTH];

  if (ch->pcdata != NULL && ch->pcdata->interp_fun != NULL) {
      ch->pcdata->interp_fun (ch, argument);
      return;
  }     
  
    /*
     * Strip leading spaces.
     */
    while ( isspace(*argument) )
  argument++;
    if ( argument[0] == '\0' )
  return;

    /*
     * Implement freeze command.
     */
    if ( !IS_NPC(ch) && IS_SET(ch->act, PLR_FREEZE) )
    {
  send_to_char( "You're totally frozen!\n\r", ch );
  return;
    }

    /*
     * Grab the command word.
     * Special parsing so ' can be a command,
     *   also no spaces needed after punctuation.
     */
    strcpy( logline, argument );
    if ( !isalpha(argument[0]) && !isdigit(argument[0]) )
    {
  command[0] = argument[0];
  command[1] = '\0';
  argument++;
  while ( isspace(*argument) )
      argument++;
    }
    else
    {
  argument = one_argument( argument, command );
    }

    /*
     * Look for command in command table.
     */
    found = FALSE;
    trust = get_trust( ch );
#ifdef OLC_VERSION
    if(ch->icg == ICG_BUILD)
	trust = MAX_LEVEL - 1;
#else
    if( IS_NPC(ch) && !str_prefix(command, "return") )
	trust = MAX_LEVEL -1;
#endif
    immc = immc_lookup(command);
    icgb = ch->icg_bits;
    icg = ch->icg;
    for ( cmd = 0; cmd_table[cmd].name[0] != '\0'; cmd++ )
    {
  if ( command[0] == cmd_table[cmd].name[0]
  &&   !str_prefix( command, cmd_table[cmd].name )
  &&   ( cmd_table[cmd].level <= trust  
	|| ( immc != -1 
		&& (  imm_command_table[immc].icg == icg
		   || IS_SET(icgb,imm_command_table[immc].bit) )
	   )
	)
     )
  {
      found = TRUE;
      break;
  }
    }

    /*
     * Log and snoop.
     *
    if ( cmd_table[cmd].log == LOG_NEVER )
  strcpy( logline, "" );
     */

    if ( ( !IS_NPC(ch) && IS_SET(ch->act, PLR_LOG) )
    ||   fLogAll
    ||   (cmd_table[cmd].log == LOG_ALWAYS && ch->level != ML) )
    {
    char    s[2*MAX_INPUT_LENGTH],*ps;
    int     i;
 
    ps=s; 
    sprintf( log_buf, "Log %s: %s", ch->name, logline );
    /* Make sure that was is displayed is what is typed */
    for (i=0;log_buf[i];i++) { 
        *ps++=log_buf[i];  
        if (log_buf[i]=='$')
            *ps++='$';
        if (log_buf[i]=='{')
            *ps++='{';
    }
    *ps=0;
/* Lets see if this works...NIGHTDAGGER */
if (cmd_table[cmd].log != LOG_NEVER)
  wiznet(log_buf,ch,NULL,WIZ_SECURE,0,get_trust(ch));
  log_string( log_buf );
    }
    /* temporary permanent 'log all' 
    else
    {
	sprintf( log_buf, "Log %s: %s", ch->name, logline );
	log_string( log_buf );
    } */

    if ( ch->desc != NULL && ch->desc->snoop_by != NULL )
    {
  write_to_buffer( ch->desc->snoop_by, "% ",    2 );
  write_to_buffer( ch->desc->snoop_by, logline, 0 );
  write_to_buffer( ch->desc->snoop_by, "\n\r",  2 );
    }

    if ( !found )
    {
  /*
   * Look for command in socials table.
   */
  if ( !check_social( ch, command, argument ) )
       /*
	&& !icec_command_hook(ch, command, argument) )
      send_to_char( "Huh?\n\r", ch );
      */
      send_to_char( "Huh-wha?\n\r", ch );
  return;
    }

    /*
     * Character not in position for command?
     */
    if ( ch->position < cmd_table[cmd].position )
    {
  switch( ch->position )
  {
  case POS_DEAD:
      send_to_char( "Lie still; you are DEAD.\n\r", ch );
      break;

  case POS_MORTAL:
  case POS_INCAP:
      send_to_char( "You are hurt far too bad for that.\n\r", ch );
      break;

  case POS_STUNNED:
      send_to_char( "You are too stunned to do that.\n\r", ch );
      break;

  case POS_SLEEPING:
      send_to_char( "In your dreams, or what?\n\r", ch );
      break;

  case POS_RESTING:
      send_to_char( "Nah... You feel too relaxed...\n\r", ch);
      break;

  case POS_SITTING:
      send_to_char( "Better stand up first.\n\r",ch);
      break;

  case POS_FIGHTING:
      send_to_char( "No way!  You are still fighting!\n\r", ch);
      break;

  }
  return;
    }

     /* Wiznet memory leak debugging */
    strcpy(commc,argument);

    /* DEstroy pending actions here */
    if ( !IS_NPC(ch) && ch->pcdata->wraith_timer > 0 )
    {
	ch->pcdata->wraith_timer = 0;
	act("You failed to go to wraithform!",ch,NULL,NULL,TO_CHAR,FALSE);
	act("$n failed to go to wraithform!",ch,NULL,NULL,TO_ROOM,FALSE);
    }
	
    if ( is_affected(ch,gsn_acclimate) )
    {
        AFFECT_DATA *paf;

        paf = affect_find(ch->affected, gsn_acclimate);
        affect_remove(ch,paf,APPLY_BOTH);
        act("You no longer are attuned with your environment.",ch,NULL,NULL,TO_CHAR,FALSE);
        act("$n is no longer attuned with $s environment.",ch,NULL,NULL,TO_ROOM,FALSE);
    }

    /*
     * Dispatch the command.
     */
    (*cmd_table[cmd].do_fun) ( ch, argument );

    tail_chain( );

    if ( strings < nAllocString )
    {
	sprintf(buf,"Memory: String allocation increase (%s/%s)",
		ch->name, commc);
	wiznet(buf,NULL,NULL,WIZ_DEBUG,0,0);
    }

    if ( permc < nAllocPerm )
    {
	sprintf(buf,"Memory: nAllocerm increase (%s/%s)",
		ch->name, commc);
	wiznet(buf,NULL,NULL,WIZ_DEBUG,0,0);
    }

/*
    if ( is_affected(ch,gsn_acclimate) )
    {
	AFFECT_DATA *paf;

	paf = affect_find(ch->affected, gsn_acclimate);
	affect_remove(ch,paf,APPLY_BOTH);
	act("You no longer are attuned with your environment.",ch,NULL,NULL,TO_CHAR,FALSE);
	act("$n is no longer attuned with $s environment.",ch,NULL,NULL,TO_ROOM,FALSE);
    }
*/
    tail_chain(); /* Never disturb the sleeping giant */
    return;
}



bool check_social( CHAR_DATA *ch, char *command, char *argument )
{
    char arg[MAX_INPUT_LENGTH];
    CHAR_DATA *victim;
    int cmd;
    bool found;

    found  = FALSE;
    for ( cmd = 0; social_table[cmd].name[0] != '\0'; cmd++ )
    {
  if ( command[0] == social_table[cmd].name[0]
  &&   !str_prefix( command, social_table[cmd].name ) )
  {
      found = TRUE;
      break;
  }
    }

    if ( !found )
  return FALSE;

    if ( !IS_NPC(ch) && IS_SET(ch->comm, COMM_NOEMOTE) )
    {
  send_to_char( "You are anti-social!\n\r", ch );
  return TRUE;
    }

    switch ( ch->position )
    {
    case POS_DEAD:
  send_to_char( "Lie still; you are DEAD.\n\r", ch );
  return TRUE;

    case POS_INCAP:
    case POS_MORTAL:
  send_to_char( "You are hurt far too bad for that.\n\r", ch );
  return TRUE;

    case POS_STUNNED:
  send_to_char( "You are too stunned to do that.\n\r", ch );
  return TRUE;

    case POS_SLEEPING:
  /*
   * I just know this is the path to a 12" 'if' statement.  :(
   * But two players asked for it already!  -- Furey
   */
  if ( !str_cmp( social_table[cmd].name, "snore" ) )
      break;
  send_to_char( "In your dreams, or what?\n\r", ch );
  return TRUE;

    }

    one_argument( argument, arg );
    victim = NULL;
    if ( arg[0] == '\0' )
    {
  act( social_table[cmd].others_no_arg, ch, NULL, victim, TO_ROOM    ,FALSE);
  act( social_table[cmd].char_no_arg,   ch, NULL, victim, TO_CHAR    ,FALSE);
    }
    else if ( ( victim = get_char_room( ch, arg ) ) == NULL )
    {
  send_to_char( "They aren't here.\n\r", ch );
    }
    else if ( victim == ch )
    {
  act( social_table[cmd].others_auto,   ch, NULL, victim, TO_ROOM    ,FALSE);
  act( social_table[cmd].char_auto,     ch, NULL, victim, TO_CHAR    ,FALSE);
    }
    else
    {
  act( social_table[cmd].others_found,  ch, NULL, victim, TO_NOTVICT ,FALSE);
  act( social_table[cmd].char_found,    ch, NULL, victim, TO_CHAR    ,FALSE);
  act( social_table[cmd].vict_found,    ch, NULL, victim, TO_VICT    ,FALSE);

  if ( !IS_NPC(ch) && IS_NPC(victim)
  &&   !IS_AFFECTED(victim, AFF_CHARM)
  &&   IS_AWAKE(victim) 
  &&   victim->desc == NULL)
  {
      switch ( number_bits( 4 ) )
      {
      case 0:

      case 1: case 2: case 3: case 4:
      case 5: case 6: case 7: case 8:
    act( social_table[cmd].others_found,
        victim, NULL, ch, TO_NOTVICT ,FALSE);
    act( social_table[cmd].char_found,
        victim, NULL, ch, TO_CHAR    ,FALSE);
    act( social_table[cmd].vict_found,
        victim, NULL, ch, TO_VICT    ,FALSE);
    break;

      case 9: case 10: case 11: case 12:
    act( "$n slaps $N.",  victim, NULL, ch, TO_NOTVICT ,FALSE);
    act( "You slap $N.",  victim, NULL, ch, TO_CHAR    ,FALSE);
    act( "$n slaps you.", victim, NULL, ch, TO_VICT    ,FALSE);
    break;
      }
  }
    }

    return TRUE;
}



/*
 * Return true if an argument is completely numeric.
 */
bool is_number ( char *arg )
{
 
    if ( *arg == '\0' )
        return FALSE;
 
    if ( *arg == '+' || *arg == '-' )
        arg++;
 
    for ( ; *arg != '\0'; arg++ )
    {
        if ( !isdigit( *arg ) )
            return FALSE;
    }
 
    return TRUE;
}



/*
 * Given a string like 14.foo, return 14 and 'foo'
 */
int number_argument( char *argument, char *arg )
{
    char *pdot;
    int number;
    
    for ( pdot = argument; *pdot != '\0'; pdot++ )
    {
  if ( *pdot == '.' )
  {
      *pdot = '\0';
      number = atoi( argument );
      *pdot = '.';
      strcpy( arg, pdot+1 );
      return number;
  }
    }

    strcpy( arg, argument );
    return 1;
}

/* 
 * Given a string like 14*foo, return 14 and 'foo'
*/
int mult_argument(char *argument, char *arg)
{
    char *pdot;
    int number;

    for ( pdot = argument; *pdot != '\0'; pdot++ )
    {
        if ( *pdot == '*' )
        {
            *pdot = '\0';
            number = atoi( argument );
            *pdot = '*';
            strcpy( arg, pdot+1 );
            return number;
        }
    }
 
    strcpy( arg, argument );
    return 1;
}


char *one_argument_cs( char *argument, char *arg_first )
{
   char cEnd;

   while( isspace(*argument) )
      argument++;

    cEnd = ' ';
    if ( *argument == '\'' || *argument == '"' )
    cEnd = *argument++;

    while ( *argument != '\0' )
    {
      if ( *argument == cEnd )
      {
         argument++;
	 break;
      }
	*arg_first = *argument;
        arg_first++;
        argument++;
    }
    *arg_first = '\0';

    while ( isspace(*argument) )
   	argument++;

      return argument;
}


/*
 * Pick off one argument from a string and return the rest.
 * Understands quotes.
 */
char *one_argument( char *argument, char *arg_first )
{
    char cEnd;

    while ( isspace(*argument) )
  argument++;

    cEnd = ' ';
    if ( *argument == '\'' || *argument == '"' )
  cEnd = *argument++;

    while ( *argument != '\0' )
    {
  if ( *argument == cEnd )
  {
      argument++;
      break;
  }
  *arg_first = LOWER(*argument);
  arg_first++;
  argument++;
    }
    *arg_first = '\0';

    while ( isspace(*argument) )
  argument++;

    return argument;
}

/*
 * Contributed by Alander.
 */
void do_commands( CHAR_DATA *ch, char *argument )
{
    char buf[MAX_STRING_LENGTH];
    int cmd;
    int col;
 
    col = 0;
    for ( cmd = 0; cmd_table[cmd].name[0] != '\0'; cmd++ )
    {
        if ( cmd_table[cmd].level <  LEVEL_HERO
        &&   cmd_table[cmd].level <= get_trust( ch ) 
  &&   cmd_table[cmd].show)
  {
      sprintf( buf, "%-12s", cmd_table[cmd].name );
      send_to_char( buf, ch );
      if ( ++col % 6 == 0 )
    send_to_char( "\n\r", ch );
  }
    }
 
    if ( col % 6 != 0 )
  send_to_char( "\n\r", ch );
    return;
}

void do_wizhelp( CHAR_DATA *ch, char *argument )
{
    char buf[MAX_STRING_LENGTH];
    int cmd,col,immc;
 
    col = 0;
    for ( cmd = 0; cmd_table[cmd].name[0] != '\0'; cmd++ )
    {
	immc = immc_lookup(cmd_table[cmd].name);
        if ( cmd_table[cmd].level >= LEVEL_HERO
        &&   (cmd_table[cmd].level <= get_trust(ch) 
	      || ch->icg == imm_command_table[immc].icg
#ifdef OLC_VERSION
	      || ch->icg == ICG_BUILD
#endif
	      || IS_SET(ch->icg_bits,imm_command_table[immc].bit) )
        &&   cmd_table[cmd].show)
  {
      sprintf( buf, "%-15s", cmd_table[cmd].name );
      send_to_char( buf, ch );
      if ( ++col % 5 == 0 )
    send_to_char( "\n\r", ch );
  }
    }
 
    if ( col % 6 != 0 )
  send_to_char( "\n\r", ch );
    return;
}

@


1.197
log
@taking out shapeshifter
corey
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.196 2004/01/11 22:07:30 boogums Exp $";
d374 1
@


1.196
log
@trying something new
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.195 2004/01/09 22:04:15 ndagger Exp $";
d300 2
a301 2
    { "shapeshift",   do_shapeshift,  POS_STANDING,   0,  LOG_NORMAL, 1, 1 },
    { "shapemorph",   do_shapemorph,  POS_STANDING,   0,  LOG_ALWAYS, 1, 1 },
@


1.195
log
@01/09/04 Nightdagger:  second attempt at blocking dir commands from logging
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.194 2004/01/08 21:59:18 ndagger Exp $";
d280 1
@


1.194
log
@01/08/04 Nightdagger:  Deny shows in mstat, changed directionals to log never
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.193 2003/11/29 23:15:37 boogums Exp $";
d650 2
a651 1

@


1.193
log
@yanking the copyspell command replacing with study
corey
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.192 2003/11/28 00:13:53 boogums Exp $";
d68 6
a73 6
    { "north",    do_north, POS_STANDING,    0,  LOG_NORMAL, 0, 1 },
    { "east",   do_east,  POS_STANDING,  0,  LOG_NORMAL, 0, 1 },
    { "south",    do_south, POS_STANDING,  0,  LOG_NORMAL, 0, 1 },
    { "west",   do_west,  POS_STANDING,  0,  LOG_NORMAL, 0, 1 },
    { "up",   do_up,    POS_STANDING,  0,  LOG_NORMAL, 0, 1 },
    { "down",   do_down,  POS_STANDING,  0,  LOG_NORMAL, 0, 1 },
@


1.192
log
@ok it's in finally
corey
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.191 2003/10/13 22:07:12 ndagger Exp $";
a345 1
    { "copyspell", do_copyspell, POS_STANDING, 0, LOG_NORMAL, 1, 0 },
d375 1
@


1.191
log
@10/13/03 Nightdagger:  Bitch channel commented out
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.190 2003/10/08 00:49:27 ndagger Exp $";
d276 1
@


1.190
log
@10/07/03 Nightdager:  Implemented bitch channel.  FUN!
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.189 2003/08/17 18:12:02 boogums Exp $";
d239 1
a239 1
    { "bitch",  do_bitch, POS_RESTING, 1, LOG_NORMAL, 1, 1},
@


1.189
log
@ok had to activate hd in interp.c
corey
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.188 2003/04/25 06:41:47 ndagger Exp $";
d239 1
@


1.188
log
@04/25/2003 Nightdagger:  Matook Council MHS flag and related stuff.
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.187 2003/04/25 05:15:38 ndagger Exp $";
d140 1
a140 1
//    { "hd",    do_hd, POS_SLEEPING,  0,  LOG_NORMAL, 1, 0 },
@


1.187
log
@04/25/2003 Nightdagger:  Killed enemy command, and enemy display in score.
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.186 2003/04/14 05:54:08 ndagger Exp $";
d477 1
@


1.186
log
@04/13/03 Nightdagger:  Last (I hope) of the autoswitching stuff for deities.
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.185 2003/03/23 00:06:55 boogums Exp $";
d135 1
a135 1
    { "enemy",    do_enemy, POS_DEAD,  0,  LOG_NORMAL, 1, 0 },
@


1.185
log
@made it so demisers can't group annd can't be forced to group
boogums
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.184 2003/02/20 00:33:02 ndagger Exp $";
d356 1
@


1.184
log
@02/19/03 Nightdagger:  hardcoded set as a level 58 command
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.183 2003/01/18 19:19:04 ndagger Exp $";
d91 1
a91 1
    { "group",          do_group,       POS_SLEEPING,    0,  LOG_NORMAL, 1, 1 },
@


1.183
log
@1/18/03 Nightdagger:  Commented out the do_socke idiotproofing, since it's worthless in preventing socket related crashes anyway.
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.182 2002/12/12 00:11:38 ndagger Exp $";
d423 1
a423 1
    { "set",    do_set,   POS_DEAD, L1,  LOG_ALWAYS, 1, 0 },
@


1.182
log
@12/11/02 Nightdagger:  added do_socke, before sockets in interp.c, makes imms type out the full sockets command so we don't have the weird alias.c crash thing.
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.181 2002/12/05 05:35:27 boogums Exp $";
d426 1
a426 1
    { "socket",   do_socke,     POS_DEAD, L1,  LOG_NORMAL, 1, 0 },
@


1.181
log
@forgot to add it ot interp.c
corey
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.180 2002/11/04 15:57:34 rusty Exp $";
d426 1
@


1.180
log
@Initial insert of Giant racial skill grab.  Just the structures and
command.  Has no affect yet.
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.179 2002/11/02 10:36:48 ndagger Exp $";
d282 1
@


1.179
log
@11/01/02 Nightdagger:  put bounty after buy in command interpreter
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.178 2002/10/26 02:43:19 boogums Exp $";
d322 1
@


1.178
log
@have a comment in comm.c interp.c dunnow what's going on and mag2.c
has the affects done
corey
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.177 2002/10/21 01:38:47 boogums Exp $";
d84 1
a85 1
    { "buy",    do_buy,   POS_RESTING,   0,  LOG_NORMAL, 1, 1 },
@


1.177
log
@ok trying sharpen again
corey
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.176 2002/10/21 01:08:38 boogums Exp $";
d671 1
a671 1
      send_to_char( "Eh?\n\r", ch );
@


1.176
log
@taking sharp out can't think straight when bear in the big blue house
is playing
corey
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.175 2002/10/20 23:43:30 boogums Exp $";
d365 1
a365 1
//    { "sharpen", do_sharpen,POS_RESTING,   0,  LOG_NORMAL, 1, 1 },
@


1.175
log
@ok another test go round of sharpen
corey
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.174 2002/10/15 21:28:49 boogums Exp $";
d365 1
a365 1
    { "sharpen", do_sharpen,POS_RESTING,   0,  LOG_NORMAL, 1, 1 },
@


1.174
log
@putting in some of NDs things it looks like and making a change
to the necromancer kit
corey
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.173 2002/10/13 21:49:02 ndagger Exp $";
d365 1
a365 1
//    { "sharpen", do_sharpen,POS_RESTING,   0,  LOG_NORMAL, 1, 1 },
@


1.173
log
@10/13/02 Nightdagger-  Added ctalk command for imms, can talk on clan channels without guilding self in/out now.
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.172 2002/10/13 03:28:50 boogums Exp $";
a281 1
    { "knock", do_knock, POS_RESTING,   0,  LOG_NORMAL, 1, 1 },
d329 1
@


1.172
log
@ok sharpen breaks the game, examining why
corey
until then taking out
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.171 2002/10/13 03:22:52 boogums Exp $";
d409 1
@


1.171
log
@ok adding the command sharpen
corey
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.170 2002/10/06 22:49:42 boogums Exp $";
d365 1
a365 1
    { "sharpen", do_sharpen,POS_RESTING,   0,  LOG_NORMAL, 1, 1 },
@


1.170
log
@added the knock command
corey
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.169 2002/09/02 21:35:49 boogums Exp $";
d365 1
@


1.169
log
@moved sockets back down into the command tree womewhat
soc would crash the mud, weird
corey
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.168 2002/05/12 14:00:17 rusty Exp $";
d282 1
@


1.168
log
@Pray can not be ordered
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.167 2002/04/01 21:18:29 rusty Exp $";
a108 1
    { "sockets",        do_sockets, POS_DEAD,       L1,  LOG_NORMAL, 1, 0 },
d421 1
@


1.167
log
@put in the pnet command
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.166 2002/03/12 04:57:18 rusty Exp $";
d353 1
a353 1
    { "pray",   do_pray,  POS_FIGHTING,   0,  LOG_NORMAL, 1, 1 },
@


1.166
log
@yanked "hd" command
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.165 2002/03/11 10:34:55 rusty Exp $";
d410 1
@


1.165
log
@gtell before gtscore
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.164 2002/03/10 22:42:20 mud Exp $";
d141 1
a141 1
    { "hd",    do_hd, POS_SLEEPING,  0,  LOG_NORMAL, 1, 0 },
@


1.164
log
@do_gtscore() typo fix
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.163 2002/03/09 20:02:13 rusty Exp $";
d208 1
a244 1
    { "gtell",    do_gtell, POS_DEAD,  0,  LOG_NORMAL, 1, 1 },
@


1.163
log
@gtscore() add moved gladiator stats out of score
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.162 2002/02/22 16:32:55 poquah Exp $";
d161 1
d208 1
a208 1
    { "gtscore",    do_gscore,    POS_SLEEPING,     0, LOG_NORMAL, 1, 0},
@


1.162
log
@adding new quest note spool
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.161 2002/02/11 20:11:34 poquah Exp $";
d207 1
@


1.161
log
@murder lowered to level 1 for smurfs
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.160 2002/01/20 21:33:18 rage Exp $";
d250 1
@


1.160
log
@added OLC only command "ftick" to force ticks
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.159 2001/12/12 18:19:07 poquah Exp $";
d329 1
a329 1
    { "murder",   do_murder,  POS_FIGHTING,  5,  LOG_NORMAL, 1, 1 },
@


1.159
log
@make 'date' do the same thing as 'time'
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.158 2001/11/25 01:26:39 rusty Exp $";
d393 1
@


1.158
log
@Webpage crash/bug fixes applied
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.157 2001/11/23 16:39:52 poquah Exp $";
d135 1
@


1.157
log
@move newbie command below news command
-poq
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.156 2001/11/23 16:17:15 poquah Exp $";
d620 15
a634 1
  sprintf( log_buf, "Log %s: %s", ch->name, logline );
@


1.156
log
@Newbie flag and code
-poq
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.155 2001/11/15 03:10:33 poquah Exp $";
a103 1
    { "newbie",   do_newbie,  POS_SLEEPING,  0,  LOG_NORMAL, 1, 0 },
d149 1
@


1.155
log
@add full sac, able to sac containers with things in them
-poq
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.154 2001/10/02 23:59:56 rage Exp $";
d104 1
@


1.154
log
@more damage code changesx..vulns moved to base damage
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.153 2001/09/22 17:41:18 rage Exp $";
d201 1
@


1.153
log
@Upped level of rename command to 59
Fixed bug with cavalier
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.152 2001/08/30 01:03:23 guerrand Exp $";
d410 1
a410 1
    { "rename", do_rename, POS_DEAD, L1, LOG_ALWAYS, 1, 0 },
@


1.152
log
@Added bounty command.
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.151 2001/07/15 20:01:20 boogums Exp $";
d410 1
a410 1
    { "rename", do_rename, POS_DEAD, L3, LOG_ALWAYS, 1, 0 },
@


1.151
log
@Adding the scribe do_scribe for the scribe kit
-Boogums
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.150 2001/07/13 00:58:57 guerrand Exp $";
d84 1
@


1.150
log
@Added 'shield bash' skill.
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.149 2001/07/04 15:22:24 guerrand Exp $";
d289 1
@


1.149
log
@Symbols don't stack, duration fixed.
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.148 2001/07/04 02:29:29 guerrand Exp $";
d368 1
@


1.148
log
@Hamstring done.
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.147 2001/07/04 01:36:41 guerrand Exp $";
a92 1
    { "hamstring", do_hamstring,POS_STANDING,0,LOG_NORMAL, 1, 1 },
d94 1
@


1.147
log
@Scrapped wraith fix 1.0 and tried again.
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.146 2001/07/04 01:21:56 guerrand Exp $";
d93 1
@


1.146
log
@Extensive changes to wraithform to have it proc after the timer expires.
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.145 2001/07/03 04:32:53 guerrand Exp $";
d690 1
a690 1
    if ( !IS_NPC(ch) && ch->pcdata->action_function != NULL )
d692 3
a694 3
	ch->pcdata->action_function = NULL;
	act("Your activities are interrupted...",ch,NULL,NULL,TO_CHAR,FALSE);
  	/* ignore timers... game loop won't proc it any way now */
@


1.145
log
@Minor bug fix for acclimate
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.144 2001/07/03 03:28:49 guerrand Exp $";
d689 8
@


1.144
log
@New druid spell - acclimate.
Kurjitsu will kick in a tad more often.
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.143 2001/06/18 01:24:11 rage Exp $";
d689 10
d720 1
d730 1
a730 1

@


1.143
log
@ Some quick fixes to forges before I even get going
	rage
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.142 2001/06/17 18:35:36 guerrand Exp $";
d708 10
@


1.142
log
@wizard 'copyspell' command is done.
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.141 2001/06/17 05:18:02 guerrand Exp $";
d270 1
@


1.141
log
@Ritual command is in.
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.140 2001/06/15 04:12:14 guerrand Exp $";
d332 1
@


1.140
log
@Moved abolish to cater to whiny mortals.
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.139 2001/06/15 02:27:51 guerrand Exp $";
d351 1
@


1.139
log
@PAladin abolish disease ability.  Neat!
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.138 2001/06/09 18:53:47 guerrand Exp $";
d120 1
a121 1
    { "affects",  do_affects, POS_SLEEPING,  0,  LOG_NORMAL, 1, 0 },
@


1.138
log
@GMAN
Added the command for mortals to set their surnames
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.137 2001/06/05 00:39:40 rage Exp $";
d120 1
@


1.137
log
@First attempt at adding do_assemble a command used to assemble objects from other objects
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.136 2001/05/26 00:33:57 rage Exp $";
d110 1
@


1.136
log
@added in IMM command to turn double xp on and off.
added global var "override" to do so.
-Rage
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.135 2001/02/13 20:29:12 mud Exp $";
d258 1
@


1.135
log
@added nooutofrange toggle
-Rusty
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.134 2000/12/14 03:50:29 mud Exp $";
d383 1
@


1.134
log
@13DEC00
Ok, i added the unwraith skill in interp.*, put a {Black Aura) in
act_info.c and modified the fight message
-Boogums
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.133 2000/12/09 07:05:49 mud Exp $";
d204 1
@


1.133
log
@08DEC00
DAMN this wraithform it's gone now :)
=Boogums
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.132 2000/12/07 06:45:45 mud Exp $";
d112 1
@


1.132
log
@ok got all the necromancer stuff out trying to restore order
Boogums
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.131 2000/12/03 17:50:30 mud Exp $";
a111 1
/*    { "unwraith", do_wraithform_return, POS_STANDING, 0, LOG_NORMAL, 1, 1},*/
@


1.131
log
@03DEC00
Ok I have added teh unwraith and am going to check the logic with a player
-Boogums
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.130 2000/10/17 22:45:34 mud Exp $";
d112 1
a112 1
    { "unwraith", do_wraithform_return, POS_STANDING, 0, LOG_NORMAL, 1, 1},
@


1.130
log
@enemies for clans , just warlock for now
-poq
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.129 2000/10/16 21:49:15 mud Exp $";
d112 1
@


1.129
log
@make nodescriptions into brief toggle
-poq
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.128 2000/10/16 00:48:52 mud Exp $";
d130 1
@


1.128
log
@nodescriptions code
-poq
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.127 2000/09/04 22:07:15 mud Exp $";
a201 1
    { "nodescriptions", do_nodescriptions,  POS_DEAD,        0,  LOG_NORMAL, 1, 0 },
@


1.127
log
@04sep00 - put kick above kcharge so precious people can type k
         wow, the kit's not even in yet and i'm causing problems
	 :) -Corey
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.126 2000/09/03 21:06:47 mud Exp $";
d202 1
@


1.126
log
@03SEP00 - First run of kcharge skill.  Have modified db.c for gsn_kcharge
          ,the kcharge function is in fight.c.  Have modifeid const.c
	  fight.c for new skill.  Going to compile and test on olc.
	  -Corey aka Boogums
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.125 2000/08/25 16:47:06 mud Exp $";
d310 1
a313 1
    { "kick",   do_kick,  POS_FIGHTING,  0,  LOG_NORMAL, 1, 1 },
@


1.125
log
@ first attempt to add obbj->prev_owner to display who last owned an obj
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.124 2000/08/23 14:50:04 mud Exp $";
d310 3
@


1.124
log
@ added olist to logged commands
 fixed bug with containers being shown twice if worn
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.123 2000/08/17 14:29:28 mud Exp $";
d330 1
a330 1
    { "hide",   do_hide,  POS_FIGHTING,   0,  LOG_NORMAL, 1, 1 },
d995 1
a995 1
      sprintf( buf, "%-12s", cmd_table[cmd].name );
d997 1
a997 1
      if ( ++col % 6 == 0 )
@


1.123
log
@ first implementation of "sanction" command for clan leaders
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.122 2000/08/16 01:39:35 mud Exp $";
d432 1
a432 1
    { "olist",    do_olist, POS_DEAD, L7, LOG_NORMAL, 1,0 },
@


1.122
log
@lower skstat command to 25
-poq
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.121 2000/07/18 00:14:50 mud Exp $";
d343 1
@


1.121
log
@changed gstat to gstatus
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.120 2000/07/18 00:01:03 mud Exp $";
d437 1
a437 1
    { "skstat",   do_skstat, POS_DEAD, L7, LOG_ALWAYS, 1, 0},
@


1.120
log
@adding gstat command
-poq
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.119 2000/07/15 00:25:57 mud Exp $";
d198 1
a198 1
    { "gstat",    do_gstat,    POS_SLEEPING,     0, LOG_NORMAL, 1, 0},
@


1.119
log
@a joke replacing huh for eh see if anyone notices
-poq
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.118 2000/07/11 23:18:57 mud Exp $";
d198 1
@


1.118
log
@added teh die command so you dont have to wait out death
-poq
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.117 2000/07/06 15:35:58 mud Exp $";
a624 1
	*/
d626 2
@


1.117
log
@ added in message to room for failed brew attempts
 changed min position for hide to POS_FIGHTING
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.116 2000/06/30 01:25:45 mud Exp $";
d322 1
@


1.116
log
@recommiting, didnt take
-poq
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.115 2000/06/30 01:23:49 mud Exp $";
d328 1
a328 1
    { "hide",   do_hide,  POS_RESTING,   0,  LOG_NORMAL, 1, 1 },
@


1.115
log
@lowered level of imms to run gladiators
-poq
@
text
@d2 1
a2 1
 *  Original Diku Mud copyright (C) 1990, 1991 by Sebastian Hammer,        *
d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.114 2000/06/29 02:40:52 mud Exp $";
@


1.114
log
@ added missed line in interp.c
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.113 2000/06/27 02:40:21 mud Exp $";
d438 4
a441 4
    { "startgladiator",do_startgladiator,POS_DEAD,L1,LOG_ALWAYS, 1, 0 },
    { "endgladiator",do_endgladiator,POS_DEAD,L1,LOG_ALWAYS, 1, 0 },
    { "skipbet",do_skipbet,POS_DEAD,L1,LOG_ALWAYS, 1, 0 },
    { "removegladiator",do_removegladiator,POS_DEAD,L1,LOG_ALWAYS, 1, 0 },
@


1.113
log
@fix gscore and skipbet so they actually call the functions
-poq
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.112 2000/06/26 06:24:52 mud Exp $";
d208 1
@


1.112
log
@add gscore and skipbet, and display ticks left in gscore
-poq
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.111 2000/05/27 02:44:11 mud Exp $";
d197 1
a197 1
    { "gscore",    do_gbet,    POS_SLEEPING,     0, LOG_NORMAL, 1, 0},
d439 1
a439 1
    { "skipbet",do_endgladiator,POS_DEAD,L1,LOG_ALWAYS, 1, 0 },
@


1.111
log
@Kit Changing: REmove sepcial effects ( ennemy, spec)
Float: swim skill helps you vs floating away
Hold: casting level capped similar to sleep
Position for zap, brandish, quaff, recite set to Fighting
Check on eating pills for position at least of fighting
Snare: duration similar to hold

Minister
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.110 2000/05/26 01:26:25 mud Exp $";
d197 1
d439 1
@


1.110
log
@ Added in betting functionality for gladiator combat
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.109 2000/05/19 13:44:01 mud Exp $";
d252 1
a252 1
    { "brandish", do_brandish,  POS_RESTING,   0,  LOG_NORMAL, 1, 1 },
d272 2
a273 2
    { "quaff",    do_quaff, POS_RESTING,   0,  LOG_NORMAL, 1, 1 },
    { "recite",   do_recite,  POS_RESTING,   0,  LOG_NORMAL, 1, 1 },
d284 1
a284 1
    { "zap",    do_zap,   POS_RESTING,   0,  LOG_NORMAL, 1, 1 },
@


1.109
log
@ more adjustments to alchemy, as well as removeing CODE_TES #ifdef's
 -Rage.
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.108 2000/05/13 21:55:13 mud Exp $";
d196 1
@


1.108
log
@Gladiator Combat - Intense!
-poquah
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.107 2000/04/18 19:51:01 mud Exp $";
d91 1
a91 1
    { "grenade",	do_grenade,	POS_STANDING,	 0,	LOG_NORMAL, 1, 1 },
@


1.107
log
@added a BOOL ooc as an extra arg to act() and act_new() to have it
deal properly with the BOOL in can_see() and PERS().
-Rusty
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.106 2000/03/10 22:02:48 mud Exp $";
d195 1
d205 1
d435 3
@


1.106
log
@do_hd for dual wield debugging
-poquah
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.105 2000/03/03 06:06:01 mud Exp $";
d748 2
a749 2
  act( social_table[cmd].others_no_arg, ch, NULL, victim, TO_ROOM    );
  act( social_table[cmd].char_no_arg,   ch, NULL, victim, TO_CHAR    );
d757 2
a758 2
  act( social_table[cmd].others_auto,   ch, NULL, victim, TO_ROOM    );
  act( social_table[cmd].char_auto,     ch, NULL, victim, TO_CHAR    );
d762 3
a764 3
  act( social_table[cmd].others_found,  ch, NULL, victim, TO_NOTVICT );
  act( social_table[cmd].char_found,    ch, NULL, victim, TO_CHAR    );
  act( social_table[cmd].vict_found,    ch, NULL, victim, TO_VICT    );
d778 1
a778 1
        victim, NULL, ch, TO_NOTVICT );
d780 1
a780 1
        victim, NULL, ch, TO_CHAR    );
d782 1
a782 1
        victim, NULL, ch, TO_VICT    );
d786 3
a788 3
    act( "$n slaps $N.",  victim, NULL, ch, TO_NOTVICT );
    act( "You slap $N.",  victim, NULL, ch, TO_CHAR    );
    act( "$n slaps you.", victim, NULL, ch, TO_VICT    );
@


1.105
log
@ Added in function declares and imm command table entry for olist

 -Rage.
 :wq
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.104 2000/03/02 19:29:39 mud Exp $";
d134 1
@


1.104
log
@ Added new imm command skstat, returns list of targets skills/spells and percents

 -Rage.
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.103 2000/02/29 06:58:01 mud Exp $";
d423 1
@


1.103
log
@allow 58's to reward and spreward all and lower pload/punload to 58
-poquah
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.102 2000/02/26 00:19:00 mud Exp $";
d428 1
@


1.102
log
@spreward
-poquah
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.101 2000/02/24 04:01:16 mud Exp $";
d376 2
a377 2
    { "pload", do_pload, POS_DEAD, L1, LOG_ALWAYS, 1, 0 },
    { "punload", do_punload, POS_DEAD, L1, LOG_ALWAYS, 1,  0 },
@


1.101
log
@lower reward to be used by imms
-poquah
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.100 2000/02/11 20:23:50 mud Exp $";
d389 1
@


1.100
log
@remove dark_item function
-poquah
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.99 2000/02/11 18:29:23 mud Exp $";
d388 1
a388 1
    { "reward", do_reward,	 POS_DEAD, L2, LOG_ALWAYS, 1, 0 },
@


1.99
log
@Dark Items function
-poquah
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.98 2000/02/11 16:48:20 mud Exp $";
a438 1
    { "darkitems",   do_dark_items,  POS_DEAD, L1,  LOG_ALWAYS, 0, 0 },
@


1.98
log
@change do_pray to POS_FIGHTING from POS_STANDING
-poquah
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.97 2000/02/09 21:29:44 mud Exp $";
d439 1
@


1.97
log
@removing all the qualifing and level logs getting spammy
-poquah
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.96 2000/02/09 21:03:16 mud Exp $";
d325 1
a325 1
    { "pray",   do_pray,  POS_STANDING,   0,  LOG_NORMAL, 1, 1 },
@


1.96
log
@rename immnotes to gnotes
-poquah
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.95 2000/02/03 03:48:58 mud Exp $";
d98 1
a98 1
    { "level",    do_level,	POS_SLEEPING, 0, LOG_ALWAYS, 1, 0 },
@


1.95
log
@interp.c   changed do pray from pos resting to pos standing
           so you can't pray transport when slept, you could for some
	   odd reason????
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.94 2000/01/24 20:03:14 mud Exp $";
d437 1
a437 1
    { "immnote",   do_immnote,  POS_SLEEPING,  L7,  LOG_NORMAL, 1, 0 },
@


1.94
log
@immload command
-poquah
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.93 1999/12/19 21:04:17 mud Exp $";
d325 1
a325 1
    { "pray",   do_pray,  POS_RESTING,   0,  LOG_NORMAL, 1, 1 },
@


1.93
log
@umm we arent coming back up?
-Poquah
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.92 1999/12/19 20:57:29 mud Exp $";
d438 1
@


1.92
log
@move immnote down after immtalk
-Poquah
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.91 1999/12/19 20:12:38 mud Exp $";
d237 1
@


1.91
log
@Change immnote to be a 53+ command
-Poquah
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.90 1999/12/19 19:47:52 mud Exp $";
a227 1
    { "immnote",   do_immnote,  POS_SLEEPING,  L7,  LOG_NORMAL, 1, 0 },
d436 1
@


1.90
log
@Immortal note spool
-Poquah
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.89 1999/12/12 18:00:41 mud Exp $";
d228 1
a228 1
    { "immnote",   do_immnote,  POS_SLEEPING,  0,  LOG_NORMAL, 1, 0 },
@


1.89
log
@Adjust the levels on some Imm commands
-Poquah
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.88 1999/12/12 06:20:53 mud Exp $";
d228 1
@


1.88
log
@Lower name to level 55
-Poquah
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.87 1999/12/09 20:04:05 mud Exp $";
d401 1
a401 1
    { "notitle",  do_notitle, POS_DEAD, L8, LOG_ALWAYS, 1, 0 },
d419 1
a419 1
    { "mwhere",   do_mwhere,  POS_DEAD, IM,  LOG_NORMAL, 1, 0 },
d421 1
a421 1
    { "owhere",   do_owhere,  POS_DEAD, IM,  LOG_NORMAL, 1, 0 },
d427 1
a427 1
    { "stat",   do_stat,  POS_DEAD, IM,  LOG_ALWAYS, 1, 0 },
@


1.87
log
@Turn log on for stat
-poquah
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.86 1999/11/24 05:05:31 mud Exp $";
d140 1
a140 1
    { "name",	do_name,  POS_DEAD,	L4, LOG_NORMAL, 1, 0},
@


1.86
log
@Moved Drag to after drink
-Poquah
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.85 1999/11/24 01:25:25 mud Exp $";
d427 1
a427 1
    { "stat",   do_stat,  POS_DEAD, IM,  LOG_NORMAL, 1, 0 },
@


1.85
log
@Drag command
-Poquah
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.84 1999/11/23 21:06:30 mud Exp $";
a249 1
    { "drag",    do_drag, POS_RESTING,   0,  LOG_ALWAYS, 1, 1 },
d252 1
@


1.84
log
@added undns command :)
-Rusty
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.83 1999/11/23 19:52:14 mud Exp $";
d250 1
@


1.83
log
@Added a linked list for putting in IP's or IP blocks that should
not have their DNS checked against.  This will keep sites with crappy
DNS servers from lagging the game.
-Rusty
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.82 1999/11/21 21:50:40 mud Exp $";
d358 1
@


1.82
log
@Added nodns

-G
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.81 1999/11/05 08:19:14 mud Exp $";
d357 1
@


1.81
log
@ Added brawler.
  Added some color to act_info.c and act_comm.c
  Added attack command to interp.c

  Ben
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.80 1999/11/02 07:51:20 mud Exp $";
d392 1
@


1.80
log
@Add 'hex' and 'fear' for Mummies
-Poquah
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.79 1999/10/31 02:23:26 mud Exp $";
d121 1
@


1.79
log
@new remort 'mummy' with skill 'breathe'
-Poquah
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.78 1999/10/17 23:22:52 mud Exp $";
d295 1
d298 1
@


1.78
log
@Changes autorescue to norescue, made more sense
-Poquah
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.77 1999/10/17 22:56:45 mud Exp $";
d288 1
@


1.77
log
@Fight.c - Changed do_rescue to check for MHS_AUTORESCUE
act_info.c - Displays of AUTORESCUE
handler.c - do_autorescue created
interp.c and interp.h - defined new do_autorescue
merc.h - defined MHS_AUTORESCUE
tables.c - added autorescue
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.76 1999/10/15 20:20:00 mud Exp $";
a181 1
    { "autorescue", do_autorescue,  POS_DEAD,        0,  LOG_NORMAL, 1, 0 },
d197 1
@


1.76
log
@Log all shapemorphs for now
-Poquah
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.75 1999/10/10 19:55:42 mud Exp $";
d182 1
@


1.75
log
@The trade command moved down into misc commands
-Rusty
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.74 1999/10/10 15:18:49 mud Exp $";
d271 1
a271 1
    { "shapemorph",   do_shapemorph,  POS_STANDING,   0,  LOG_NORMAL, 1, 1 },
@


1.74
log
@emoved or commented out all references to IMC.  This should significantly
reduce the size of our executable and basically wasn't being used for
anything as we were not connected to any IMC server.
-Rusty
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.73 1999/10/08 20:16:08 mud Exp $";
a273 1
    { "trade",	do_trade,	POS_RESTING, 0, LOG_NORMAL, 1, 0 },
d333 1
@


1.73
log
@Fight.c -> changed xp_compute
interp.c, interph -> added a command 'level'
merc.h -> added structure for debit_levels and define for PREFRESH
save .h -> save debit levels
update.c -> change advancement, contains do_olevel function

Coded by Ben
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.72 1999/10/02 00:09:07 mud Exp $";
d33 4
a36 2
#include "imc-mercbase.h"
#include "icec-mercbase.h"
a434 1
     */
d448 2
a449 1
    /* IMC imm commands */
d463 1
a463 1

d596 2
a597 1
  if ( !check_social( ch, command, argument ) 
d599 1
@


1.72
log
@New Shapeshifter Power - Shapemorph
-Poquah
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.71 1999/09/02 03:43:13 mud Exp $";
d96 1
@


1.71
log
@Some basic bug fixes to mounted code
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.70 1999/09/01 22:33:07 mud Exp $";
d268 1
@


1.70
log
@Duh, gotta code DISMOUNT too
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.69 1999/09/01 22:23:20 mud Exp $";
d188 1
a188 1
    { "dismount", do_dismount, POS_STANDING, 0, LOG_ALWAYS, 1, 0 }, 
@


1.69
log
@Mounted combat finished.
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.68 1999/08/23 19:19:23 mud Exp $";
d188 1
@


1.68
log
@Not sure why these are changed
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.67 1999/08/23 03:34:46 mud Exp $";
d97 1
@


1.67
log
@Son of a bitch pain in my ass fucking mount code.
Just look at that list of files.  Keeeeerist.
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.66 1999/08/13 21:35:53 mud Exp $";
d241 1
@


1.66
log
@Listen command
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.65 1999/08/13 18:48:34 mud Exp $";
d305 1
@


1.65
log
@Basic stuff for alchemists, saves changes, magelabs
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.64 1999/08/11 03:36:27 mud Exp $";
d357 1
@


1.64
log
@Added explode
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.63 1999/08/01 16:33:51 mud Exp $";
d81 1
d89 1
@


1.63
log
@May not longer order your mobs to blleed, I hope


Rage.
:wq
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.62 1999/07/24 04:59:57 mud Exp $";
d350 1
@


1.62
log
@Cstat Adding
-Poquah
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.61 1999/07/23 20:08:29 mud Exp $";
d280 1
a280 1
    { "bleed",  do_bleed, POS_FIGHTING,  0,  LOG_NORMAL, 1, 1 },
@


1.61
log
@Remove Approve stuff
-Poquah
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.60 1999/07/14 18:13:55 mud Exp $";
d124 1
@


1.60
log
@Changed the /**/ RCS Id to a static char rcsid[] = "Id";
-Rusty
@
text
@d18 1
a18 1
static char rcsid[] = "$Id: interp.c,v 1.58 1999/07/12 02:49:18 mud Exp $";
a334 1
    { "approve",  do_approve, POS_DEAD, 55, LOG_ALWAYS, 1, 0 },
@


1.59
log
@rename command
@
text
@d18 1
a18 1
/* @@(#)$Id: interp.c,v 1.58 1999/07/12 02:49:18 mud Exp $ */
@


1.58
log
@Eqlist generator
-Poquah
@
text
@d18 1
a18 1
/* @@(#)$Id: interp.c,v 1.57 1999/07/10 00:11:37 mud Exp $ */
d363 1
d840 30
@


1.57
log
@Name approval
@
text
@d18 1
a18 1
/* @@(#)$Id: interp.c,v 1.56 1999/07/03 21:30:09 mud Exp $ */
d337 1
@


1.56
log
@Letting sleeping players send tells, cant remember why we werent going to
do it, so I'll put it in for now, might remove it later.
-Poquah
@
text
@d18 1
a18 1
/* @@(#)$Id: interp.c,v 1.55 1999/06/24 22:37:23 mud Exp $ */
d335 1
@


1.55
log
@Added command to interp.c
@
text
@d18 1
a18 1
/* @@(#)$Id: interp.c,v 1.54 1999/06/20 20:59:45 mud Exp $ */
d104 1
a104 1
    { "tell",   do_tell,  POS_RESTING,   0,  LOG_NORMAL, 1, 1 },
@


1.54
log
@Added commands for bladesong and rage
@
text
@d18 1
a18 1
/* @@(#)$Id: interp.c,v 1.53 1999/05/30 20:29:06 mud Exp $ */
d218 1
@


1.53
log
@Moved the do_quicken to not disturb others like quest,quit etc
-Poquah
@
text
@d18 1
a18 1
/* @@(#)$Id: interp.c,v 1.52 1999/05/28 06:51:24 mud Exp $ */
d276 1
d290 1
@


1.52
log
@Quicken defined
-POquah
@
text
@d18 1
a18 1
/* @@(#)$Id: interp.c,v 1.51 1999/05/26 03:27:33 mud Exp $ */
a98 1
    { "quicken",   do_quicken,  POS_FIGHTING,  0,  LOG_NORMAL, 1, 1 },
d309 1
@


1.51
log
@Changes to add in garotte item types and add the garotte
skill to assassins.
-Rusty
@
text
@d18 1
a18 1
/* @@(#)$Id: interp.c,v 1.50 1999/05/16 04:17:16 mud Exp $ */
d99 1
@


1.50
log
@Add shapeshift so I can actually test it *bonk*
-Poquah
@
text
@d18 1
a18 1
/* @@(#)$Id: interp.c,v 1.49 1999/05/15 16:39:03 mud Exp $ */
d283 1
@


1.49
log
@Rangers.
@
text
@d18 1
a18 1
/* @@(#)$Id: interp.c,v 1.48 1999/05/05 21:54:15 mud Exp $ */
d260 1
@


1.48
log
@Fixed crash bug with do_mstat() and matook timer pcdata.
-Rusty
@
text
@d18 1
a18 1
/* @@(#)$Id: interp.c,v 1.47 1999/05/03 08:00:18 mud Exp $ */
d150 1
@


1.47
log
@Bank code.
@
text
@d18 1
a18 1
/* @@(#)$Id: interp.c,v 1.46 1999/04/28 08:09:31 mud Exp $ */
d158 2
a159 1
    { "deposit", do_deposit, POS_RESTING, 0, LOG_NORMAL, 1, 0 },
d161 2
a162 1
    /*
@


1.46
log
@Last bit of Svant code before the big quest
@
text
@d18 1
a18 1
/* @@(#)$Id: interp.c,v 1.45 1999/04/20 17:11:24 mud Exp $ */
d103 1
a103 1
    { "spy",	do_spy,	POS_RESTING, 0, LOG_NORMAL, 1, 1 },
d158 2
a159 1

@


1.45
log
@Added function to log all the material names to build a material table.
-Rusty
@
text
@d18 1
a18 1
/* @@(#)$Id: interp.c,v 1.44 1999/04/15 02:56:12 mud Exp $ */
d47 1
a47 1
#define LOG_NEVER 2
d80 1
a80 1
    { "cgossip",        do_auction,     POS_SLEEPING,    5,  LOG_NORMAL, 1, 1 },
d95 1
a95 1
    { "music",          do_music,     POS_SLEEPING,    2,  LOG_NORMAL, 1, 1 }, 
d210 1
a210 1
    { "grats",    do_grats, POS_SLEEPING,  2,  LOG_NORMAL, 1, 1 },
d216 1
a216 1
    { "quest",    do_quest, POS_SLEEPING,  2,  LOG_NORMAL, 1, 1 },
@


1.44
log
@Added do_highlander for setting highlander bit and for checking highlanders
-Poquah
@
text
@d18 1
a18 1
/* @@(#)$Id: interp.c,v 1.43 1999/04/12 22:42:01 mud Exp $ */
d333 1
@


1.43
log
@password command now logs silently instead of over wiznet
-Rusty
@
text
@d18 1
a18 1
/* @@(#)$Id: interp.c,v 1.42 1999/04/12 22:18:26 mud Exp $ */
d90 1
@


1.42
log
@Added do_pur cause a couple lazy Imms keep purging players they
mean to Purr
-Poquah
@
text
@d18 1
a18 1
/* @@(#)$Id: interp.c,v 1.41 1999/04/10 06:17:25 mud Exp $ */
d189 1
a189 1
    { "password", do_password,  POS_DEAD,  0,  LOG_ALWAYS,  1, 0 },
@


1.41
log
@Removing lowbies inability to ooc below level 3
-Poquah
@
text
@d18 1
a18 1
/* @@(#)$Id: interp.c,v 1.40 1999/04/05 21:07:16 mud Exp $ */
d368 1
@


1.40
log
@Password changes log, because I want them to.
-Rusty
@
text
@d18 1
a18 1
/* @@(#)$Id: interp.c,v 1.39 1999/01/12 20:24:27 mud Exp $ */
d96 1
a96 1
    { "ooc",	do_ooc,	POS_SLEEPING,    2,  LOG_NORMAL, 1, 1 },
@


1.39
log
@Added stuff for wu jen kit.
-Rusty
@
text
@d18 1
a18 1
/* @@(#)$Id: interp.c,v 1.38 1998/12/15 22:17:23 mud Exp $ */
d189 1
a189 1
    { "password", do_password,  POS_DEAD,  0,  LOG_NEVER,  1, 0 },
@


1.38
log
@Spies/Wrymslayers
@
text
@d18 1
a18 1
/* @@(#)$Id: interp.c,v 1.37 1998/12/13 21:38:19 mud Exp $ */
d84 1
@


1.37
log
@Added bug command back in
@
text
@d18 1
a18 1
/* @@(#)$Id: interp.c,v 1.36 1998/12/12 01:20:55 mud Exp $ */
d101 1
@


1.36
log
@Error checking
@
text
@d18 1
a18 1
/* @@(#)$Id: interp.c,v 1.35 1998/12/09 08:32:17 mud Exp $ */
d112 1
@


1.35
log
@Re-reclassing.
@
text
@d18 1
a18 1
/* @@(#)$Id: interp.c,v 1.34 1998/12/08 02:05:03 mud Exp $ */
d79 1
@


1.34
log
@Reward lowered to 58
@
text
@d18 1
a18 1
/* @@(#)$Id: interp.c,v 1.33 1998/12/05 09:50:19 mud Exp $ */
d293 1
a293 1
    { "kit",	do_kit,	POS_SLEEPING,	10,	LOG_ALWAYS, 1, 0 },
d342 1
a342 1
    { "reclass",    do_reclass, POS_DEAD, 26,  LOG_ALWAYS, 1, 0 },
@


1.33
log
@Kit stuff
@
text
@d18 1
a18 1
/* @@(#)$Id: interp.c,v 1.32 1998/10/30 15:27:17 mud Exp $ */
d348 1
a348 1
    { "reward", do_reward,	 POS_DEAD, L1, LOG_ALWAYS, 1, 0 },
@


1.32
log
@committing Guerrand mods.
-Rusty
@
text
@d18 1
a18 1
/* @@(#)$Id: interp.c,v 1.31 1998/10/30 03:01:54 mud Exp $ */
d293 1
@


1.31
log
@MudTrader on line
@
text
@d18 1
a18 1
/* @@(#)$Id: interp.c,v 1.30 1998/10/20 00:42:32 mud Exp $ */
d253 1
a253 1
    { "trade",	do_trade,	POS_RESTING,55, LOG_NORMAL, 1, 0 },
@


1.30
log
@Races
@
text
@d18 1
a18 1
/* @@(#)$Id: interp.c,v 1.29 1998/10/19 07:19:04 mud Exp $ */
d253 1
@


1.29
log
@More stuff
@
text
@d18 1
a18 1
/* @@(#)$Id: interp.c,v 1.28 1998/10/19 04:35:32 mud Exp $ */
d267 1
@


1.28
log
@CVeward command added
s beginning with `CVS:' are removed automatically
@
text
@d18 1
a18 1
/* @@(#)$Id: interp.c,v 1.27 1998/10/19 01:38:42 mud Exp $ */
d235 1
@


1.27
log
@Put loner after longeq
-Rusty
@
text
@d18 1
a18 1
/* @@(#)$Id: interp.c,v 1.26 1998/10/18 16:27:54 mud Exp $ */
d344 1
@


1.26
log
@Added do_spool() to catchup all note spools in one command.
-Rusty
@
text
@d18 1
a18 1
/* @@(#)$Id: interp.c,v 1.25 1998/10/12 19:49:14 mud Exp $ */
a125 1
    { "loner",  do_loner,      POS_DEAD,    5,  LOG_ALWAYS, 1, 0 },
d177 1
@


1.25
log
@a
REclass changes.
@
text
@d18 1
a18 1
/* @@(#)$Id: interp.c,v 1.24 1998/10/12 07:36:44 mud Exp $ */
d221 1
@


1.24
log
@Added lag command
@
text
@d18 1
a18 1
/* @@(#)$Id: interp.c,v 1.23 1998/10/12 07:28:54 mud Exp $ */
d336 2
a337 2
    { "reclas",    do_reclas, POS_DEAD, 51,  LOG_NORMAL, 1, 0 },
    { "reclass",    do_reclass, POS_DEAD, 51,  LOG_ALWAYS, 1, 0 },
@


1.23
log
@Nottil imped
@
text
@d18 1
a18 1
/* @@(#)$Id: interp.c,v 1.22 1998/10/11 16:43:20 mud Exp $ */
d346 1
@


1.22
log
@Moved spells before specialize
@
text
@d18 1
a18 1
/* @@(#)$Id: interp.c,v 1.21 1998/10/11 06:51:38 mud Exp $ */
d354 1
@


1.21
log
@Added specialix
@
text
@d18 1
a18 1
/* @@(#)$Id: interp.c,v 1.20 1998/10/11 00:13:35 mud Exp $ */
d143 1
a145 1
    { "spells",   do_spells,  POS_DEAD,  0,  LOG_NORMAL, 1, 0 },
@


1.20
log
@Specializatio for warriros is in
@
text
@d18 1
a18 1
/* @@(#)$Id: interp.c,v 1.19 1998/10/09 05:29:49 mud Exp $ */
d143 1
@


1.19
log
@LOG_ALWAYS to LOG_NEVER on hostmask
-Rusty
@
text
@d18 1
a18 1
/* @@(#)$Id: interp.c,v 1.18 1998/10/09 05:09:54 mud Exp $ */
d143 1
@


1.18
log
@ CHanged level on Hostmask
 -Rusty
@
text
@d18 1
a18 1
/* @@(#)$Id: interp.c,v 1.17 1998/10/09 04:04:13 mud Exp $ */
d122 1
a122 1
    { "hostmask",   do_hostmask,  POS_DEAD,  L1,  LOG_ALWAYS, 1, 0 },
@


1.17
log
@and again
@
text
@d18 1
a18 1
/* @@(#)$Id: interp.c,v 1.16 1998/10/09 02:30:15 mud Exp $ */
d122 1
a122 1
    { "hostmask",   do_hostmask,  POS_DEAD,  L6,  LOG_ALWAYS, 1, 0 },
@


1.16
log
@Added 'hostmask' command.
-Rusty
@
text
@d18 1
a18 1
/* @@(#)$Id: interp.c,v 1.15 1998/10/02 23:39:34 mud Exp $ */
d122 1
a122 1
    { "hostmask",   do_hostmask,  POS_DEAD,  L6,  LOG_NEVER, 1, 0 },
@


1.15
log
@Faeries adjusted, maladictions hurt more
@
text
@d18 1
a18 1
/* @@(#)$Id: interp.c,v 1.14 1998/10/01 06:15:02 mud Exp $ */
d122 1
@


1.14
log
@C  Fixed a bug w/ dbite
@
text
@d18 1
a18 1
/* @@(#)$Id: interp.c,v 1.13 1998/09/03 14:20:06 mud Exp $ */
d262 1
@


1.13
log
@made sacrifice unorderable
@
text
@d18 1
a18 1
/* @@(#)$Id: interp.c,v 1.12 1998/08/30 04:08:12 mud Exp $ */
d260 1
@


1.12
log
@Move display after dirt kick in the cmd_table
@
text
@d18 1
a18 1
/* @@(#)$Id: interp.c,v 1.11 1998/08/30 03:59:57 mud Exp $ */
d245 1
a245 1
    { "sacrifice",  do_sacrifice, POS_RESTING,   0,  LOG_NORMAL, 1, 1 },
@


1.11
log
@Fixed a bug with longeq, fixed the log type for the 'display' comomand.

-Ben
@
text
@d18 1
a18 1
/* @@(#)$Id: interp.c,v 1.10 1998/08/30 03:33:36 mud Exp $ */
d173 1
a173 1
    { "display", do_display, POS_SLEEPING,	0, LOG_NORMAL, 1, 0 },
d277 1
@


1.10
log
@MOved a buttload of bits around, added a converter to save.c.
-Ben
@
text
@d18 1
a18 1
/* @@(#)$Id: interp.c,v 1.9 1998/08/20 21:05:33 mud Exp $ */
d173 1
a173 1
    { "display", do_display, POS_SLEEPING,	0, LOG_ALWAYS, 1, 0 },
@


1.9
log
@Moved trumps sac rank clan deity and switched from
char_data to pc_data.
-Rusty
@
text
@d18 1
a18 1
/* @@(#)$Id: interp.c,v 1.8 1998/08/12 08:20:19 mud Exp $ */
d173 1
@


1.8
log
@* Finished traps
* Rockbiters added
-Ben
@
text
@d18 1
a18 1
/* @@(#)$Id: interp.c,v 1.7 1998/08/10 21:32:53 mud Exp $ */
d292 1
@


1.7
log
@* tail slap, and some bug fixes for it
-Ben
@
text
@d18 1
a18 1
/* @@(#)$Id: interp.c,v 1.6 1998/08/10 00:08:24 mud Exp $ */
d110 1
@


1.6
log
@* Some new wiznet stuff, changes to warp, mundane adjustments
-Ben
@
text
@d18 1
a18 1
/* @@(#)$Id: interp.c,v 1.5 1998/08/07 20:19:59 mud Exp $ */
d271 1
a271 1

@


1.5
log
@Room affects stuff for traps.
Bleed/vampire changes.
swim/scan start at 50% and 50%up for free for existing characters.
moved trap to after trip in interp list for grandfathered use
- Both of Us
@
text
@d18 1
a18 1
/* @@(#)$Id: interp.c,v 1.4 1998/08/05 09:14:31 mud Exp $ */
d435 5
a439 1
    
d593 3
d602 16
@


1.4
log
@* Removes shout, added a 'silence' command to stiffle game spam
* Added saves to score
-Ben
@
text
@d18 1
a18 1
/* @@(#)$Id: interp.c,v 1.3 1998/08/04 18:03:07 mud Exp $ */
d270 1
@


1.3
log
@Added pload and punload, small mods to deny to allow for the bit to be removed.
-Ben
@
text
@d18 1
a18 1
/* @@(#)$Id: interp.c,v 1.2 1998/08/04 17:21:36 mud Exp $ */
d212 3
a214 1
    { "shout",    do_shout, POS_RESTING,   3,  LOG_NORMAL, 1, 1 },
@


1.2
log
@* Changed level field to 2 spaces instead of 3
* Added nonote command
* Added a 'set hours' ability
-Ben
@
text
@d18 1
a18 1
/* @@(#)$Id: interp.c,v 1.1 1998/06/16 17:49:35 mud Exp $ */
d320 2
@


1.1
log
@Initial insert of all src files.
@
text
@d18 1
a18 1
/* @@(#)$Id$ */
d336 1
@
