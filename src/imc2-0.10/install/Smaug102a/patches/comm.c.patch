--- src.old/comm.c	Fri Feb  7 03:22:48 1997
+++ src/comm.c	Wed Nov 12 21:51:34 1997
@@ -26,6 +26,8 @@
 #include <signal.h>
 #include <stdarg.h>
 #include "mud.h"
+#include "imc.h"
+#include "icec.h"
 
 /*
  * Socket and TCP/IP stuff.
@@ -211,9 +213,16 @@ int main( int argc, char **argv )
     control2 = init_socket( port+1 );
     conclient= init_socket( port+10);
     conjava  = init_socket( port+20);
+
+	imc_startup ("imc/");
+	icec_init();
+
     sprintf( log_buf, "Realms of Despair ready on port %d.", port );
     log_string( log_buf );
     game_loop( );
+
+    imc_shutdown(); /* shut down IMC */
+
     close( control  );
     close( control2 );
     close( conclient);
@@ -383,6 +392,8 @@ void accept_new( int ctrl )
 	      break;
 	}
 
+	maxdesc=imc_fill_fdsets(maxdesc, &in_set, &out_set, &exc_set);
+
 	if ( select( maxdesc+1, &in_set, &out_set, &exc_set, &null_time ) < 0 )
 	{
 	    perror( "accept_new: select: poll" );
@@ -543,6 +554,9 @@ void game_loop( )
 	      break;
 	}
 
+	/* kick IMC */
+	imc_idle_select(&in_set, &out_set, &exc_set, current_time);
+
 	/*
 	 * Autonomous game motion.
 	 */
@@ -589,6 +603,7 @@ void game_loop( )
 	      break;
 	}
 
+
 	/*
 	 * Synchronize to a clock.
 	 * Sleep( last_time + 1/PULSE_PER_SECOND - now ).
@@ -909,7 +924,6 @@ void close_socket( DESCRIPTOR_DATA *dclo
 	}
     }
 
-
     if ( !DoNotUnlink )
     {
 	/* make sure loop doesn't get messed up */
@@ -2253,7 +2267,9 @@ void send_to_char_color( const char *txt
 /*  make_color_sequence(NULL, NULL, NULL);*/
   while ( (colstr = strpbrk(prevstr, "&^")) != NULL )
   {
-    write_to_buffer(d, prevstr, (colstr-prevstr));
+    /* if we pass length=0, then write_to_buffer will do a strlen! */
+    if (colstr!=prevstr)
+      write_to_buffer(d, prevstr, (colstr-prevstr));
     ln = make_color_sequence(colstr, colbuf, d);
     if ( ln < 0 )
     {
